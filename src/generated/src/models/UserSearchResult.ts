/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSearchResult
 */
export interface UserSearchResult {
    /**
     * 
     * @type {string}
     * @memberof UserSearchResult
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResult
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResult
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResult
     */
    avatarSrc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResult
     */
    type: UserSearchResultTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum UserSearchResultTypeEnum {
    user = 'user',
    sso = 'sso'
}


/**
 * Check if a given object implements the UserSearchResult interface.
 */
export function instanceOfUserSearchResult(value: object): value is UserSearchResult {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function UserSearchResultFromJSON(json: any): UserSearchResult {
    return UserSearchResultFromJSONTyped(json, false);
}

export function UserSearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSearchResult {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'avatarSrc': json['avatarSrc'] == null ? undefined : json['avatarSrc'],
        'type': json['type'],
    };
}

export function UserSearchResultToJSON(json: any): UserSearchResult {
    return UserSearchResultToJSONTyped(json, false);
}

export function UserSearchResultToJSONTyped(value?: UserSearchResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'displayName': value['displayName'],
        'avatarSrc': value['avatarSrc'],
        'type': value['type'],
    };
}

