/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImportedAPIStatusSUCCESS } from './ImportedAPIStatusSUCCESS';
import {
    ImportedAPIStatusSUCCESSFromJSON,
    ImportedAPIStatusSUCCESSFromJSONTyped,
    ImportedAPIStatusSUCCESSToJSON,
    ImportedAPIStatusSUCCESSToJSONTyped,
} from './ImportedAPIStatusSUCCESS';
import type { NotificationAndCount } from './NotificationAndCount';
import {
    NotificationAndCountFromJSON,
    NotificationAndCountFromJSONTyped,
    NotificationAndCountToJSON,
    NotificationAndCountToJSONTyped,
} from './NotificationAndCount';

/**
 * 
 * @export
 * @interface HeaderState
 */
export interface HeaderState {
    /**
     * 
     * @type {ImportedAPIStatusSUCCESS}
     * @memberof HeaderState
     */
    status: ImportedAPIStatusSUCCESS;
    /**
     * 
     * @type {object}
     * @memberof HeaderState
     */
    notificationType: object;
    /**
     * 
     * @type {string}
     * @memberof HeaderState
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof HeaderState
     */
    userIdWS: string;
    /**
     * 
     * @type {Array<NotificationAndCount>}
     * @memberof HeaderState
     */
    notificationCounts: Array<NotificationAndCount>;
}



/**
 * Check if a given object implements the HeaderState interface.
 */
export function instanceOfHeaderState(value: object): value is HeaderState {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('notificationType' in value) || value['notificationType'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('userIdWS' in value) || value['userIdWS'] === undefined) return false;
    if (!('notificationCounts' in value) || value['notificationCounts'] === undefined) return false;
    return true;
}

export function HeaderStateFromJSON(json: any): HeaderState {
    return HeaderStateFromJSONTyped(json, false);
}

export function HeaderStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): HeaderState {
    if (json == null) {
        return json;
    }
    return {
        
        'status': ImportedAPIStatusSUCCESSFromJSON(json['status']),
        'notificationType': json['NotificationType'],
        'userId': json['userId'],
        'userIdWS': json['userIdWS'],
        'notificationCounts': ((json['notificationCounts'] as Array<any>).map(NotificationAndCountFromJSON)),
    };
}

export function HeaderStateToJSON(json: any): HeaderState {
    return HeaderStateToJSONTyped(json, false);
}

export function HeaderStateToJSONTyped(value?: HeaderState | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': ImportedAPIStatusSUCCESSToJSON(value['status']),
        'NotificationType': value['notificationType'],
        'userId': value['userId'],
        'userIdWS': value['userIdWS'],
        'notificationCounts': ((value['notificationCounts'] as Array<any>).map(NotificationAndCountToJSON)),
    };
}

