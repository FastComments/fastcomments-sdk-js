/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * From T, pick a set of properties whose keys are in the union K
 * @export
 * @interface PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId
 */
export interface PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId {
    /**
     * 
     * @type {string}
     * @memberof PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId
     */
    commenterName: string;
    /**
     * 
     * @type {string}
     * @memberof PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId
     */
    commentHTML: string;
    /**
     * 
     * @type {boolean}
     * @memberof PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId
     */
    isDeleted?: boolean;
}

/**
 * Check if a given object implements the PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId interface.
 */
export function instanceOfPickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId(value: object): value is PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId {
    if (!('commenterName' in value) || value['commenterName'] === undefined) return false;
    if (!('commentHTML' in value) || value['commentHTML'] === undefined) return false;
    return true;
}

export function PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserIdFromJSON(json: any): PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId {
    return PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserIdFromJSONTyped(json, false);
}

export function PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'] == null ? undefined : json['userId'],
        'commenterName': json['commenterName'],
        'commentHTML': json['commentHTML'],
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
    };
}

export function PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserIdToJSON(json: any): PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId {
    return PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserIdToJSONTyped(json, false);
}

export function PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserIdToJSONTyped(value?: PickFCommentIsDeletedOrCommentHTMLOrCommenterNameOrUserId | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'commenterName': value['commenterName'],
        'commentHTML': value['commentHTML'],
        'isDeleted': value['isDeleted'],
    };
}

