/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateUserBadgeParams
 */
export interface CreateUserBadgeParams {
    /**
     * 
     * @type {string}
     * @memberof CreateUserBadgeParams
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserBadgeParams
     */
    badgeId: string;
    /**
     * 
     * @type {boolean}
     * @memberof CreateUserBadgeParams
     */
    displayedOnComments?: boolean;
}

/**
 * Check if a given object implements the CreateUserBadgeParams interface.
 */
export function instanceOfCreateUserBadgeParams(value: object): value is CreateUserBadgeParams {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('badgeId' in value) || value['badgeId'] === undefined) return false;
    return true;
}

export function CreateUserBadgeParamsFromJSON(json: any): CreateUserBadgeParams {
    return CreateUserBadgeParamsFromJSONTyped(json, false);
}

export function CreateUserBadgeParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserBadgeParams {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'badgeId': json['badgeId'],
        'displayedOnComments': json['displayedOnComments'] == null ? undefined : json['displayedOnComments'],
    };
}

export function CreateUserBadgeParamsToJSON(json: any): CreateUserBadgeParams {
    return CreateUserBadgeParamsToJSONTyped(json, false);
}

export function CreateUserBadgeParamsToJSONTyped(value?: CreateUserBadgeParams | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'badgeId': value['badgeId'],
        'displayedOnComments': value['displayedOnComments'],
    };
}

