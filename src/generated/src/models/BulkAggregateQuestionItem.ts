/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AggregateTimeBucket } from './AggregateTimeBucket';
import {
    AggregateTimeBucketFromJSON,
    AggregateTimeBucketFromJSONTyped,
    AggregateTimeBucketToJSON,
    AggregateTimeBucketToJSONTyped,
} from './AggregateTimeBucket';

/**
 * 
 * @export
 * @interface BulkAggregateQuestionItem
 */
export interface BulkAggregateQuestionItem {
    /**
     * 
     * @type {string}
     * @memberof BulkAggregateQuestionItem
     */
    aggId: string;
    /**
     * 
     * @type {string}
     * @memberof BulkAggregateQuestionItem
     */
    questionId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BulkAggregateQuestionItem
     */
    questionIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof BulkAggregateQuestionItem
     */
    urlId?: string;
    /**
     * 
     * @type {AggregateTimeBucket}
     * @memberof BulkAggregateQuestionItem
     */
    timeBucket?: AggregateTimeBucket;
    /**
     * 
     * @type {Date}
     * @memberof BulkAggregateQuestionItem
     */
    startDate?: Date;
}



/**
 * Check if a given object implements the BulkAggregateQuestionItem interface.
 */
export function instanceOfBulkAggregateQuestionItem(value: object): value is BulkAggregateQuestionItem {
    if (!('aggId' in value) || value['aggId'] === undefined) return false;
    return true;
}

export function BulkAggregateQuestionItemFromJSON(json: any): BulkAggregateQuestionItem {
    return BulkAggregateQuestionItemFromJSONTyped(json, false);
}

export function BulkAggregateQuestionItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkAggregateQuestionItem {
    if (json == null) {
        return json;
    }
    return {
        
        'aggId': json['aggId'],
        'questionId': json['questionId'] == null ? undefined : json['questionId'],
        'questionIds': json['questionIds'] == null ? undefined : json['questionIds'],
        'urlId': json['urlId'] == null ? undefined : json['urlId'],
        'timeBucket': json['timeBucket'] == null ? undefined : AggregateTimeBucketFromJSON(json['timeBucket']),
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
    };
}

export function BulkAggregateQuestionItemToJSON(json: any): BulkAggregateQuestionItem {
    return BulkAggregateQuestionItemToJSONTyped(json, false);
}

export function BulkAggregateQuestionItemToJSONTyped(value?: BulkAggregateQuestionItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'aggId': value['aggId'],
        'questionId': value['questionId'],
        'questionIds': value['questionIds'],
        'urlId': value['urlId'],
        'timeBucket': AggregateTimeBucketToJSON(value['timeBucket']),
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),
    };
}

