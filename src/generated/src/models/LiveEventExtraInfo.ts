/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecordStringBeforeStringOrNullAfterStringOrNullValue } from './RecordStringBeforeStringOrNullAfterStringOrNullValue';
import {
    RecordStringBeforeStringOrNullAfterStringOrNullValueFromJSON,
    RecordStringBeforeStringOrNullAfterStringOrNullValueFromJSONTyped,
    RecordStringBeforeStringOrNullAfterStringOrNullValueToJSON,
    RecordStringBeforeStringOrNullAfterStringOrNullValueToJSONTyped,
} from './RecordStringBeforeStringOrNullAfterStringOrNullValue';

/**
 * 
 * @export
 * @interface LiveEventExtraInfo
 */
export interface LiveEventExtraInfo {
    /**
     * Construct a type with a set of properties K of type T
     * @type {{ [key: string]: RecordStringBeforeStringOrNullAfterStringOrNullValue; }}
     * @memberof LiveEventExtraInfo
     */
    commentPositions?: { [key: string]: RecordStringBeforeStringOrNullAfterStringOrNullValue; };
}

/**
 * Check if a given object implements the LiveEventExtraInfo interface.
 */
export function instanceOfLiveEventExtraInfo(value: object): value is LiveEventExtraInfo {
    return true;
}

export function LiveEventExtraInfoFromJSON(json: any): LiveEventExtraInfo {
    return LiveEventExtraInfoFromJSONTyped(json, false);
}

export function LiveEventExtraInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveEventExtraInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'commentPositions': json['commentPositions'] == null ? undefined : (mapValues(json['commentPositions'], RecordStringBeforeStringOrNullAfterStringOrNullValueFromJSON)),
    };
}

export function LiveEventExtraInfoToJSON(json: any): LiveEventExtraInfo {
    return LiveEventExtraInfoToJSONTyped(json, false);
}

export function LiveEventExtraInfoToJSONTyped(value?: LiveEventExtraInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'commentPositions': value['commentPositions'] == null ? undefined : (mapValues(value['commentPositions'], RecordStringBeforeStringOrNullAfterStringOrNullValueToJSON)),
    };
}

