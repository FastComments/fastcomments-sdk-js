/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AggregationOpType } from './AggregationOpType';
import {
    AggregationOpTypeFromJSON,
    AggregationOpTypeFromJSONTyped,
    AggregationOpTypeToJSON,
    AggregationOpTypeToJSONTyped,
} from './AggregationOpType';

/**
 * An operation that will be applied on a field
 * @export
 * @interface AggregationOperation
 */
export interface AggregationOperation {
    /**
     * The field to operate on
     * @type {string}
     * @memberof AggregationOperation
     */
    field: string;
    /**
     * 
     * @type {AggregationOpType}
     * @memberof AggregationOperation
     */
    op: AggregationOpType;
    /**
     * Optional alias for the output; if not provided, a default alias is computed
     * @type {string}
     * @memberof AggregationOperation
     */
    alias?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AggregationOperation
     */
    expandArray?: boolean;
}



/**
 * Check if a given object implements the AggregationOperation interface.
 */
export function instanceOfAggregationOperation(value: object): value is AggregationOperation {
    if (!('field' in value) || value['field'] === undefined) return false;
    if (!('op' in value) || value['op'] === undefined) return false;
    return true;
}

export function AggregationOperationFromJSON(json: any): AggregationOperation {
    return AggregationOperationFromJSONTyped(json, false);
}

export function AggregationOperationFromJSONTyped(json: any, ignoreDiscriminator: boolean): AggregationOperation {
    if (json == null) {
        return json;
    }
    return {
        
        'field': json['field'],
        'op': AggregationOpTypeFromJSON(json['op']),
        'alias': json['alias'] == null ? undefined : json['alias'],
        'expandArray': json['expandArray'] == null ? undefined : json['expandArray'],
    };
}

export function AggregationOperationToJSON(json: any): AggregationOperation {
    return AggregationOperationToJSONTyped(json, false);
}

export function AggregationOperationToJSONTyped(value?: AggregationOperation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'field': value['field'],
        'op': AggregationOpTypeToJSON(value['op']),
        'alias': value['alias'],
        'expandArray': value['expandArray'],
    };
}

