/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationObjectType } from './NotificationObjectType';
import {
    NotificationObjectTypeFromJSON,
    NotificationObjectTypeFromJSONTyped,
    NotificationObjectTypeToJSON,
    NotificationObjectTypeToJSONTyped,
} from './NotificationObjectType';
import type { NotificationType } from './NotificationType';
import {
    NotificationTypeFromJSON,
    NotificationTypeFromJSONTyped,
    NotificationTypeToJSON,
    NotificationTypeToJSONTyped,
} from './NotificationType';

/**
 * 
 * @export
 * @interface RenderableUserNotification
 */
export interface RenderableUserNotification {
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    conversationId?: string;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    contextHTML?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RenderableUserNotification
     */
    fromUserNames?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RenderableUserNotification
     */
    fromUserIds?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RenderableUserNotification
     */
    relatedIds?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof RenderableUserNotification
     */
    count?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RenderableUserNotification
     */
    optedOut: boolean;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    fromUserAvatarSrc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    fromUserId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    fromUserName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    fromCommentId?: string | null;
    /**
     * 
     * @type {NotificationType}
     * @memberof RenderableUserNotification
     */
    type: NotificationType;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    sent: string;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    viewed: string;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    relatedObjectId: string;
    /**
     * 
     * @type {NotificationObjectType}
     * @memberof RenderableUserNotification
     */
    relatedObjectType: NotificationObjectType;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    pageTitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    urlId: string;
    /**
     * 
     * @type {string}
     * @memberof RenderableUserNotification
     */
    id: string;
}



/**
 * Check if a given object implements the RenderableUserNotification interface.
 */
export function instanceOfRenderableUserNotification(value: object): value is RenderableUserNotification {
    if (!('optedOut' in value) || value['optedOut'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('sent' in value) || value['sent'] === undefined) return false;
    if (!('viewed' in value) || value['viewed'] === undefined) return false;
    if (!('relatedObjectId' in value) || value['relatedObjectId'] === undefined) return false;
    if (!('relatedObjectType' in value) || value['relatedObjectType'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('urlId' in value) || value['urlId'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function RenderableUserNotificationFromJSON(json: any): RenderableUserNotification {
    return RenderableUserNotificationFromJSONTyped(json, false);
}

export function RenderableUserNotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): RenderableUserNotification {
    if (json == null) {
        return json;
    }
    return {
        
        'conversationId': json['conversationId'] == null ? undefined : json['conversationId'],
        'contextHTML': json['contextHTML'] == null ? undefined : json['contextHTML'],
        'fromUserNames': json['fromUserNames'] == null ? undefined : json['fromUserNames'],
        'fromUserIds': json['fromUserIds'] == null ? undefined : json['fromUserIds'],
        'relatedIds': json['relatedIds'] == null ? undefined : json['relatedIds'],
        'count': json['count'] == null ? undefined : json['count'],
        'optedOut': json['optedOut'],
        'fromUserAvatarSrc': json['fromUserAvatarSrc'] == null ? undefined : json['fromUserAvatarSrc'],
        'fromUserId': json['fromUserId'] == null ? undefined : json['fromUserId'],
        'fromUserName': json['fromUserName'] == null ? undefined : json['fromUserName'],
        'fromCommentId': json['fromCommentId'] == null ? undefined : json['fromCommentId'],
        'type': NotificationTypeFromJSON(json['type']),
        'createdAt': json['createdAt'],
        'sent': json['sent'],
        'viewed': json['viewed'],
        'relatedObjectId': json['relatedObjectId'],
        'relatedObjectType': NotificationObjectTypeFromJSON(json['relatedObjectType']),
        'pageTitle': json['pageTitle'] == null ? undefined : json['pageTitle'],
        'url': json['url'],
        'urlId': json['urlId'],
        'id': json['_id'],
    };
}

export function RenderableUserNotificationToJSON(json: any): RenderableUserNotification {
    return RenderableUserNotificationToJSONTyped(json, false);
}

export function RenderableUserNotificationToJSONTyped(value?: RenderableUserNotification | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conversationId': value['conversationId'],
        'contextHTML': value['contextHTML'],
        'fromUserNames': value['fromUserNames'],
        'fromUserIds': value['fromUserIds'],
        'relatedIds': value['relatedIds'],
        'count': value['count'],
        'optedOut': value['optedOut'],
        'fromUserAvatarSrc': value['fromUserAvatarSrc'],
        'fromUserId': value['fromUserId'],
        'fromUserName': value['fromUserName'],
        'fromCommentId': value['fromCommentId'],
        'type': NotificationTypeToJSON(value['type']),
        'createdAt': value['createdAt'],
        'sent': value['sent'],
        'viewed': value['viewed'],
        'relatedObjectId': value['relatedObjectId'],
        'relatedObjectType': NotificationObjectTypeToJSON(value['relatedObjectType']),
        'pageTitle': value['pageTitle'],
        'url': value['url'],
        'urlId': value['urlId'],
        '_id': value['id'],
    };
}

