/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RenderableUserNotification } from './RenderableUserNotification';
import {
    RenderableUserNotificationFromJSON,
    RenderableUserNotificationFromJSONTyped,
    RenderableUserNotificationToJSON,
    RenderableUserNotificationToJSONTyped,
} from './RenderableUserNotification';
import type { ImportedAPIStatusSUCCESS } from './ImportedAPIStatusSUCCESS';
import {
    ImportedAPIStatusSUCCESSFromJSON,
    ImportedAPIStatusSUCCESSFromJSONTyped,
    ImportedAPIStatusSUCCESSToJSON,
    ImportedAPIStatusSUCCESSToJSONTyped,
} from './ImportedAPIStatusSUCCESS';

/**
 * 
 * @export
 * @interface GetMyNotificationsResponse
 */
export interface GetMyNotificationsResponse {
    /**
     * Construct a type with a set of properties K of type T
     * @type {{ [key: string]: string; }}
     * @memberof GetMyNotificationsResponse
     */
    translations?: { [key: string]: string; };
    /**
     * 
     * @type {boolean}
     * @memberof GetMyNotificationsResponse
     */
    isSubscribed: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetMyNotificationsResponse
     */
    hasMore: boolean;
    /**
     * 
     * @type {Array<RenderableUserNotification>}
     * @memberof GetMyNotificationsResponse
     */
    notifications: Array<RenderableUserNotification>;
    /**
     * 
     * @type {ImportedAPIStatusSUCCESS}
     * @memberof GetMyNotificationsResponse
     */
    status: ImportedAPIStatusSUCCESS;
}



/**
 * Check if a given object implements the GetMyNotificationsResponse interface.
 */
export function instanceOfGetMyNotificationsResponse(value: object): value is GetMyNotificationsResponse {
    if (!('isSubscribed' in value) || value['isSubscribed'] === undefined) return false;
    if (!('hasMore' in value) || value['hasMore'] === undefined) return false;
    if (!('notifications' in value) || value['notifications'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function GetMyNotificationsResponseFromJSON(json: any): GetMyNotificationsResponse {
    return GetMyNotificationsResponseFromJSONTyped(json, false);
}

export function GetMyNotificationsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMyNotificationsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'translations': json['translations'] == null ? undefined : json['translations'],
        'isSubscribed': json['isSubscribed'],
        'hasMore': json['hasMore'],
        'notifications': ((json['notifications'] as Array<any>).map(RenderableUserNotificationFromJSON)),
        'status': ImportedAPIStatusSUCCESSFromJSON(json['status']),
    };
}

export function GetMyNotificationsResponseToJSON(json: any): GetMyNotificationsResponse {
    return GetMyNotificationsResponseToJSONTyped(json, false);
}

export function GetMyNotificationsResponseToJSONTyped(value?: GetMyNotificationsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'translations': value['translations'],
        'isSubscribed': value['isSubscribed'],
        'hasMore': value['hasMore'],
        'notifications': ((value['notifications'] as Array<any>).map(RenderableUserNotificationToJSON)),
        'status': ImportedAPIStatusSUCCESSToJSON(value['status']),
    };
}

