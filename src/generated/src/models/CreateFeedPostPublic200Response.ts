/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomConfigParameters } from './CustomConfigParameters';
import {
    CustomConfigParametersFromJSON,
    CustomConfigParametersFromJSONTyped,
    CustomConfigParametersToJSON,
    CustomConfigParametersToJSONTyped,
} from './CustomConfigParameters';
import type { ImportedAPIStatusFAILED } from './ImportedAPIStatusFAILED';
import {
    ImportedAPIStatusFAILEDFromJSON,
    ImportedAPIStatusFAILEDFromJSONTyped,
    ImportedAPIStatusFAILEDToJSON,
    ImportedAPIStatusFAILEDToJSONTyped,
} from './ImportedAPIStatusFAILED';
import type { FeedPost } from './FeedPost';
import {
    FeedPostFromJSON,
    FeedPostFromJSONTyped,
    FeedPostToJSON,
    FeedPostToJSONTyped,
} from './FeedPost';
import type { APIError } from './APIError';
import {
    APIErrorFromJSON,
    APIErrorFromJSONTyped,
    APIErrorToJSON,
    APIErrorToJSONTyped,
} from './APIError';
import type { CreateFeedPostResponse } from './CreateFeedPostResponse';
import {
    CreateFeedPostResponseFromJSON,
    CreateFeedPostResponseFromJSONTyped,
    CreateFeedPostResponseToJSON,
    CreateFeedPostResponseToJSONTyped,
} from './CreateFeedPostResponse';

/**
 * 
 * @export
 * @interface CreateFeedPostPublic200Response
 */
export interface CreateFeedPostPublic200Response {
    /**
     * 
     * @type {ImportedAPIStatusFAILED}
     * @memberof CreateFeedPostPublic200Response
     */
    status: ImportedAPIStatusFAILED;
    /**
     * 
     * @type {FeedPost}
     * @memberof CreateFeedPostPublic200Response
     */
    feedPost: FeedPost;
    /**
     * 
     * @type {string}
     * @memberof CreateFeedPostPublic200Response
     */
    reason: string;
    /**
     * 
     * @type {string}
     * @memberof CreateFeedPostPublic200Response
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof CreateFeedPostPublic200Response
     */
    secondaryCode?: string;
    /**
     * 
     * @type {number}
     * @memberof CreateFeedPostPublic200Response
     */
    bannedUntil?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateFeedPostPublic200Response
     */
    maxCharacterLength?: number;
    /**
     * 
     * @type {string}
     * @memberof CreateFeedPostPublic200Response
     */
    translatedError?: string;
    /**
     * 
     * @type {CustomConfigParameters}
     * @memberof CreateFeedPostPublic200Response
     */
    customConfig?: CustomConfigParameters;
}



/**
 * Check if a given object implements the CreateFeedPostPublic200Response interface.
 */
export function instanceOfCreateFeedPostPublic200Response(value: object): value is CreateFeedPostPublic200Response {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('feedPost' in value) || value['feedPost'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    return true;
}

export function CreateFeedPostPublic200ResponseFromJSON(json: any): CreateFeedPostPublic200Response {
    return CreateFeedPostPublic200ResponseFromJSONTyped(json, false);
}

export function CreateFeedPostPublic200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFeedPostPublic200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'status': ImportedAPIStatusFAILEDFromJSON(json['status']),
        'feedPost': FeedPostFromJSON(json['feedPost']),
        'reason': json['reason'],
        'code': json['code'],
        'secondaryCode': json['secondaryCode'] == null ? undefined : json['secondaryCode'],
        'bannedUntil': json['bannedUntil'] == null ? undefined : json['bannedUntil'],
        'maxCharacterLength': json['maxCharacterLength'] == null ? undefined : json['maxCharacterLength'],
        'translatedError': json['translatedError'] == null ? undefined : json['translatedError'],
        'customConfig': json['customConfig'] == null ? undefined : CustomConfigParametersFromJSON(json['customConfig']),
    };
}

export function CreateFeedPostPublic200ResponseToJSON(json: any): CreateFeedPostPublic200Response {
    return CreateFeedPostPublic200ResponseToJSONTyped(json, false);
}

export function CreateFeedPostPublic200ResponseToJSONTyped(value?: CreateFeedPostPublic200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': ImportedAPIStatusFAILEDToJSON(value['status']),
        'feedPost': FeedPostToJSON(value['feedPost']),
        'reason': value['reason'],
        'code': value['code'],
        'secondaryCode': value['secondaryCode'],
        'bannedUntil': value['bannedUntil'],
        'maxCharacterLength': value['maxCharacterLength'],
        'translatedError': value['translatedError'],
        'customConfig': CustomConfigParametersToJSON(value['customConfig']),
    };
}

