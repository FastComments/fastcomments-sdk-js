/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaAsset } from './MediaAsset';
import {
    MediaAssetFromJSON,
    MediaAssetFromJSONTyped,
    MediaAssetToJSON,
    MediaAssetToJSONTyped,
} from './MediaAsset';
import type { APIStatus } from './APIStatus';
import {
    APIStatusFromJSON,
    APIStatusFromJSONTyped,
    APIStatusToJSON,
    APIStatusToJSONTyped,
} from './APIStatus';

/**
 * 
 * @export
 * @interface UploadImageResponse
 */
export interface UploadImageResponse {
    /**
     * 
     * @type {APIStatus}
     * @memberof UploadImageResponse
     */
    status: APIStatus;
    /**
     * 
     * @type {string}
     * @memberof UploadImageResponse
     */
    url?: string;
    /**
     * 
     * @type {Array<MediaAsset>}
     * @memberof UploadImageResponse
     */
    media?: Array<MediaAsset>;
    /**
     * 
     * @type {string}
     * @memberof UploadImageResponse
     */
    reason?: string;
    /**
     * 
     * @type {string}
     * @memberof UploadImageResponse
     */
    code?: string;
}



/**
 * Check if a given object implements the UploadImageResponse interface.
 */
export function instanceOfUploadImageResponse(value: object): value is UploadImageResponse {
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function UploadImageResponseFromJSON(json: any): UploadImageResponse {
    return UploadImageResponseFromJSONTyped(json, false);
}

export function UploadImageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadImageResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': APIStatusFromJSON(json['status']),
        'url': json['url'] == null ? undefined : json['url'],
        'media': json['media'] == null ? undefined : ((json['media'] as Array<any>).map(MediaAssetFromJSON)),
        'reason': json['reason'] == null ? undefined : json['reason'],
        'code': json['code'] == null ? undefined : json['code'],
    };
}

export function UploadImageResponseToJSON(json: any): UploadImageResponse {
    return UploadImageResponseToJSONTyped(json, false);
}

export function UploadImageResponseToJSONTyped(value?: UploadImageResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': APIStatusToJSON(value['status']),
        'url': value['url'],
        'media': value['media'] == null ? undefined : ((value['media'] as Array<any>).map(MediaAssetToJSON)),
        'reason': value['reason'],
        'code': value['code'],
    };
}

