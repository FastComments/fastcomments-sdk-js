/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AggregationItem } from './AggregationItem';
import {
    AggregationItemFromJSON,
    AggregationItemFromJSONTyped,
    AggregationItemToJSON,
    AggregationItemToJSONTyped,
} from './AggregationItem';
import type { AggregationResponseStats } from './AggregationResponseStats';
import {
    AggregationResponseStatsFromJSON,
    AggregationResponseStatsFromJSONTyped,
    AggregationResponseStatsToJSON,
    AggregationResponseStatsToJSONTyped,
} from './AggregationResponseStats';
import type { APIStatus } from './APIStatus';
import {
    APIStatusFromJSON,
    APIStatusFromJSONTyped,
    APIStatusToJSON,
    APIStatusToJSONTyped,
} from './APIStatus';

/**
 * The API response returns the aggregated data along with simple stats
 * @export
 * @interface AggregationResponse
 */
export interface AggregationResponse {
    /**
     * 
     * @type {APIStatus}
     * @memberof AggregationResponse
     */
    status: APIStatus;
    /**
     * 
     * @type {Array<AggregationItem>}
     * @memberof AggregationResponse
     */
    data: Array<AggregationItem>;
    /**
     * 
     * @type {AggregationResponseStats}
     * @memberof AggregationResponse
     */
    stats?: AggregationResponseStats;
}



/**
 * Check if a given object implements the AggregationResponse interface.
 */
export function instanceOfAggregationResponse(value: object): value is AggregationResponse {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function AggregationResponseFromJSON(json: any): AggregationResponse {
    return AggregationResponseFromJSONTyped(json, false);
}

export function AggregationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AggregationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': APIStatusFromJSON(json['status']),
        'data': ((json['data'] as Array<any>).map(AggregationItemFromJSON)),
        'stats': json['stats'] == null ? undefined : AggregationResponseStatsFromJSON(json['stats']),
    };
}

export function AggregationResponseToJSON(json: any): AggregationResponse {
    return AggregationResponseToJSONTyped(json, false);
}

export function AggregationResponseToJSONTyped(value?: AggregationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': APIStatusToJSON(value['status']),
        'data': ((value['data'] as Array<any>).map(AggregationItemToJSON)),
        'stats': AggregationResponseStatsToJSON(value['stats']),
    };
}

