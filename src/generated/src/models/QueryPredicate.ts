/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QueryPredicateValue } from './QueryPredicateValue';
import {
    QueryPredicateValueFromJSON,
    QueryPredicateValueFromJSONTyped,
    QueryPredicateValueToJSON,
    QueryPredicateValueToJSONTyped,
} from './QueryPredicateValue';

/**
 * 
 * @export
 * @interface QueryPredicate
 */
export interface QueryPredicate {
    /**
     * 
     * @type {string}
     * @memberof QueryPredicate
     */
    key: string;
    /**
     * 
     * @type {QueryPredicateValue}
     * @memberof QueryPredicate
     */
    value: QueryPredicateValue;
    /**
     * 
     * @type {string}
     * @memberof QueryPredicate
     */
    operator: QueryPredicateOperatorEnum;
}

/**
* @export
* @enum {string}
*/
export enum QueryPredicateOperatorEnum {
    eq = 'eq',
    not_eq = 'not_eq',
    greater_than = 'greater_than',
    less_than = 'less_than',
    contains = 'contains'
}


/**
 * Check if a given object implements the QueryPredicate interface.
 */
export function instanceOfQueryPredicate(value: object): value is QueryPredicate {
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('operator' in value) || value['operator'] === undefined) return false;
    return true;
}

export function QueryPredicateFromJSON(json: any): QueryPredicate {
    return QueryPredicateFromJSONTyped(json, false);
}

export function QueryPredicateFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryPredicate {
    if (json == null) {
        return json;
    }
    return {
        
        'key': json['key'],
        'value': QueryPredicateValueFromJSON(json['value']),
        'operator': json['operator'],
    };
}

export function QueryPredicateToJSON(json: any): QueryPredicate {
    return QueryPredicateToJSONTyped(json, false);
}

export function QueryPredicateToJSONTyped(value?: QueryPredicate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'key': value['key'],
        'value': QueryPredicateValueToJSON(value['value']),
        'operator': value['operator'],
    };
}

