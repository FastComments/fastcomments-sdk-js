/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CommentUserHashTagInfo } from './CommentUserHashTagInfo';
import {
    CommentUserHashTagInfoFromJSON,
    CommentUserHashTagInfoFromJSONTyped,
    CommentUserHashTagInfoToJSON,
    CommentUserHashTagInfoToJSONTyped,
} from './CommentUserHashTagInfo';
import type { CommentUserMentionInfo } from './CommentUserMentionInfo';
import {
    CommentUserMentionInfoFromJSON,
    CommentUserMentionInfoFromJSONTyped,
    CommentUserMentionInfoToJSON,
    CommentUserMentionInfoToJSONTyped,
} from './CommentUserMentionInfo';
import type { FCommentMeta } from './FCommentMeta';
import {
    FCommentMetaFromJSON,
    FCommentMetaFromJSONTyped,
    FCommentMetaToJSON,
    FCommentMetaToJSONTyped,
} from './FCommentMeta';
import type { CommentUserBadgeInfo } from './CommentUserBadgeInfo';
import {
    CommentUserBadgeInfoFromJSON,
    CommentUserBadgeInfoFromJSONTyped,
    CommentUserBadgeInfoToJSON,
    CommentUserBadgeInfoToJSONTyped,
} from './CommentUserBadgeInfo';

/**
 * 
 * @export
 * @interface FComment
 */
export interface FComment {
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    tenantId: string;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    urlId: string;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    urlIdRaw?: string;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    pageTitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    userId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    anonUserId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    commenterEmail?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    commenterName: string;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    commenterLink?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    comment: string;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    commentHTML: string;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    parentId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof FComment
     */
    date: Date | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    localDateString?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    localDateHours?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    votes?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    votesUp?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    votesDown?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof FComment
     */
    expireAt?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    verified: boolean;
    /**
     * 
     * @type {Date}
     * @memberof FComment
     */
    verifiedDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    verificationId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    notificationSentForParent?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    notificationSentForParentTenant?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    reviewed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    imported?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    externalId?: string;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    externalParentId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    avatarSrc?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    isSpam?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    permNotSpam?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    aiDeterminedSpam?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    hasImages?: boolean;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    pageNumber?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    pageNumberOF?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    pageNumberNF?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    hasLinks?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    hasCode?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    approved: boolean;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    locale: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    isDeleted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    isDeletedUser?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    isBannedUser?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    isByAdmin?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    isByModerator?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    isPinned?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    isLocked?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    flagCount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    rating?: number | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    displayLabel?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    fromProductId?: number;
    /**
     * 
     * @type {FCommentMeta}
     * @memberof FComment
     */
    meta?: FCommentMeta | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    ipHash?: string;
    /**
     * 
     * @type {Array<CommentUserMentionInfo>}
     * @memberof FComment
     */
    mentions?: Array<CommentUserMentionInfo>;
    /**
     * 
     * @type {Array<CommentUserHashTagInfo>}
     * @memberof FComment
     */
    hashTags?: Array<CommentUserHashTagInfo>;
    /**
     * 
     * @type {Array<CommentUserBadgeInfo>}
     * @memberof FComment
     */
    badges?: Array<CommentUserBadgeInfo> | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    domain?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    veteranBadgeProcessed?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof FComment
     */
    moderationGroupIds?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    didProcessBadges?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    fromOfflineRestore?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    autoplayJobId?: string;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    autoplayDelayMS?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof FComment
     */
    feedbackIds?: Array<string>;
    /**
     * 
     * @type {Array<Array<any>>}
     * @memberof FComment
     */
    logs?: Array<Array<any>> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof FComment
     */
    groupIds?: Array<string> | null;
    /**
     * 
     * @type {number}
     * @memberof FComment
     */
    viewCount?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof FComment
     */
    requiresVerification?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FComment
     */
    editKey?: string;
}

/**
 * Check if a given object implements the FComment interface.
 */
export function instanceOfFComment(value: object): value is FComment {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('urlId' in value) || value['urlId'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('commenterName' in value) || value['commenterName'] === undefined) return false;
    if (!('comment' in value) || value['comment'] === undefined) return false;
    if (!('commentHTML' in value) || value['commentHTML'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('verified' in value) || value['verified'] === undefined) return false;
    if (!('approved' in value) || value['approved'] === undefined) return false;
    if (!('locale' in value) || value['locale'] === undefined) return false;
    return true;
}

export function FCommentFromJSON(json: any): FComment {
    return FCommentFromJSONTyped(json, false);
}

export function FCommentFromJSONTyped(json: any, ignoreDiscriminator: boolean): FComment {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'tenantId': json['tenantId'],
        'urlId': json['urlId'],
        'urlIdRaw': json['urlIdRaw'] == null ? undefined : json['urlIdRaw'],
        'url': json['url'],
        'pageTitle': json['pageTitle'] == null ? undefined : json['pageTitle'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'anonUserId': json['anonUserId'] == null ? undefined : json['anonUserId'],
        'commenterEmail': json['commenterEmail'] == null ? undefined : json['commenterEmail'],
        'commenterName': json['commenterName'],
        'commenterLink': json['commenterLink'] == null ? undefined : json['commenterLink'],
        'comment': json['comment'],
        'commentHTML': json['commentHTML'],
        'parentId': json['parentId'] == null ? undefined : json['parentId'],
        'date': (json['date'] == null ? null : new Date(json['date'])),
        'localDateString': json['localDateString'] == null ? undefined : json['localDateString'],
        'localDateHours': json['localDateHours'] == null ? undefined : json['localDateHours'],
        'votes': json['votes'] == null ? undefined : json['votes'],
        'votesUp': json['votesUp'] == null ? undefined : json['votesUp'],
        'votesDown': json['votesDown'] == null ? undefined : json['votesDown'],
        'expireAt': json['expireAt'] == null ? undefined : (new Date(json['expireAt'])),
        'verified': json['verified'],
        'verifiedDate': json['verifiedDate'] == null ? undefined : (new Date(json['verifiedDate'])),
        'verificationId': json['verificationId'] == null ? undefined : json['verificationId'],
        'notificationSentForParent': json['notificationSentForParent'] == null ? undefined : json['notificationSentForParent'],
        'notificationSentForParentTenant': json['notificationSentForParentTenant'] == null ? undefined : json['notificationSentForParentTenant'],
        'reviewed': json['reviewed'] == null ? undefined : json['reviewed'],
        'imported': json['imported'] == null ? undefined : json['imported'],
        'externalId': json['externalId'] == null ? undefined : json['externalId'],
        'externalParentId': json['externalParentId'] == null ? undefined : json['externalParentId'],
        'avatarSrc': json['avatarSrc'] == null ? undefined : json['avatarSrc'],
        'isSpam': json['isSpam'] == null ? undefined : json['isSpam'],
        'permNotSpam': json['permNotSpam'] == null ? undefined : json['permNotSpam'],
        'aiDeterminedSpam': json['aiDeterminedSpam'] == null ? undefined : json['aiDeterminedSpam'],
        'hasImages': json['hasImages'] == null ? undefined : json['hasImages'],
        'pageNumber': json['pageNumber'] == null ? undefined : json['pageNumber'],
        'pageNumberOF': json['pageNumberOF'] == null ? undefined : json['pageNumberOF'],
        'pageNumberNF': json['pageNumberNF'] == null ? undefined : json['pageNumberNF'],
        'hasLinks': json['hasLinks'] == null ? undefined : json['hasLinks'],
        'hasCode': json['hasCode'] == null ? undefined : json['hasCode'],
        'approved': json['approved'],
        'locale': json['locale'],
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
        'isDeletedUser': json['isDeletedUser'] == null ? undefined : json['isDeletedUser'],
        'isBannedUser': json['isBannedUser'] == null ? undefined : json['isBannedUser'],
        'isByAdmin': json['isByAdmin'] == null ? undefined : json['isByAdmin'],
        'isByModerator': json['isByModerator'] == null ? undefined : json['isByModerator'],
        'isPinned': json['isPinned'] == null ? undefined : json['isPinned'],
        'isLocked': json['isLocked'] == null ? undefined : json['isLocked'],
        'flagCount': json['flagCount'] == null ? undefined : json['flagCount'],
        'rating': json['rating'] == null ? undefined : json['rating'],
        'displayLabel': json['displayLabel'] == null ? undefined : json['displayLabel'],
        'fromProductId': json['fromProductId'] == null ? undefined : json['fromProductId'],
        'meta': json['meta'] == null ? undefined : FCommentMetaFromJSON(json['meta']),
        'ipHash': json['ipHash'] == null ? undefined : json['ipHash'],
        'mentions': json['mentions'] == null ? undefined : ((json['mentions'] as Array<any>).map(CommentUserMentionInfoFromJSON)),
        'hashTags': json['hashTags'] == null ? undefined : ((json['hashTags'] as Array<any>).map(CommentUserHashTagInfoFromJSON)),
        'badges': json['badges'] == null ? undefined : ((json['badges'] as Array<any>).map(CommentUserBadgeInfoFromJSON)),
        'domain': json['domain'] == null ? undefined : json['domain'],
        'veteranBadgeProcessed': json['veteranBadgeProcessed'] == null ? undefined : json['veteranBadgeProcessed'],
        'moderationGroupIds': json['moderationGroupIds'] == null ? undefined : json['moderationGroupIds'],
        'didProcessBadges': json['didProcessBadges'] == null ? undefined : json['didProcessBadges'],
        'fromOfflineRestore': json['fromOfflineRestore'] == null ? undefined : json['fromOfflineRestore'],
        'autoplayJobId': json['autoplayJobId'] == null ? undefined : json['autoplayJobId'],
        'autoplayDelayMS': json['autoplayDelayMS'] == null ? undefined : json['autoplayDelayMS'],
        'feedbackIds': json['feedbackIds'] == null ? undefined : json['feedbackIds'],
        'logs': json['logs'] == null ? undefined : json['logs'],
        'groupIds': json['groupIds'] == null ? undefined : json['groupIds'],
        'viewCount': json['viewCount'] == null ? undefined : json['viewCount'],
        'requiresVerification': json['requiresVerification'] == null ? undefined : json['requiresVerification'],
        'editKey': json['editKey'] == null ? undefined : json['editKey'],
    };
}

export function FCommentToJSON(json: any): FComment {
    return FCommentToJSONTyped(json, false);
}

export function FCommentToJSONTyped(value?: FComment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'tenantId': value['tenantId'],
        'urlId': value['urlId'],
        'urlIdRaw': value['urlIdRaw'],
        'url': value['url'],
        'pageTitle': value['pageTitle'],
        'userId': value['userId'],
        'anonUserId': value['anonUserId'],
        'commenterEmail': value['commenterEmail'],
        'commenterName': value['commenterName'],
        'commenterLink': value['commenterLink'],
        'comment': value['comment'],
        'commentHTML': value['commentHTML'],
        'parentId': value['parentId'],
        'date': (value['date'] == null ? null : (value['date'] as any).toISOString()),
        'localDateString': value['localDateString'],
        'localDateHours': value['localDateHours'],
        'votes': value['votes'],
        'votesUp': value['votesUp'],
        'votesDown': value['votesDown'],
        'expireAt': value['expireAt'] == null ? undefined : ((value['expireAt'] as any).toISOString()),
        'verified': value['verified'],
        'verifiedDate': value['verifiedDate'] == null ? undefined : ((value['verifiedDate'] as any).toISOString()),
        'verificationId': value['verificationId'],
        'notificationSentForParent': value['notificationSentForParent'],
        'notificationSentForParentTenant': value['notificationSentForParentTenant'],
        'reviewed': value['reviewed'],
        'imported': value['imported'],
        'externalId': value['externalId'],
        'externalParentId': value['externalParentId'],
        'avatarSrc': value['avatarSrc'],
        'isSpam': value['isSpam'],
        'permNotSpam': value['permNotSpam'],
        'aiDeterminedSpam': value['aiDeterminedSpam'],
        'hasImages': value['hasImages'],
        'pageNumber': value['pageNumber'],
        'pageNumberOF': value['pageNumberOF'],
        'pageNumberNF': value['pageNumberNF'],
        'hasLinks': value['hasLinks'],
        'hasCode': value['hasCode'],
        'approved': value['approved'],
        'locale': value['locale'],
        'isDeleted': value['isDeleted'],
        'isDeletedUser': value['isDeletedUser'],
        'isBannedUser': value['isBannedUser'],
        'isByAdmin': value['isByAdmin'],
        'isByModerator': value['isByModerator'],
        'isPinned': value['isPinned'],
        'isLocked': value['isLocked'],
        'flagCount': value['flagCount'],
        'rating': value['rating'],
        'displayLabel': value['displayLabel'],
        'fromProductId': value['fromProductId'],
        'meta': FCommentMetaToJSON(value['meta']),
        'ipHash': value['ipHash'],
        'mentions': value['mentions'] == null ? undefined : ((value['mentions'] as Array<any>).map(CommentUserMentionInfoToJSON)),
        'hashTags': value['hashTags'] == null ? undefined : ((value['hashTags'] as Array<any>).map(CommentUserHashTagInfoToJSON)),
        'badges': value['badges'] == null ? undefined : ((value['badges'] as Array<any>).map(CommentUserBadgeInfoToJSON)),
        'domain': value['domain'],
        'veteranBadgeProcessed': value['veteranBadgeProcessed'],
        'moderationGroupIds': value['moderationGroupIds'],
        'didProcessBadges': value['didProcessBadges'],
        'fromOfflineRestore': value['fromOfflineRestore'],
        'autoplayJobId': value['autoplayJobId'],
        'autoplayDelayMS': value['autoplayDelayMS'],
        'feedbackIds': value['feedbackIds'],
        'logs': value['logs'],
        'groupIds': value['groupIds'],
        'viewCount': value['viewCount'],
        'requiresVerification': value['requiresVerification'],
        'editKey': value['editKey'],
    };
}

