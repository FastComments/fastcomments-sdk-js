/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APISSOUser
 */
export interface APISSOUser {
    /**
     * 
     * @type {string}
     * @memberof APISSOUser
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof APISSOUser
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof APISSOUser
     */
    websiteUrl: string;
    /**
     * 
     * @type {string}
     * @memberof APISSOUser
     */
    email: string;
    /**
     * 
     * @type {number}
     * @memberof APISSOUser
     */
    signUpDate: number;
    /**
     * 
     * @type {string}
     * @memberof APISSOUser
     */
    createdFromUrlId: string;
    /**
     * 
     * @type {number}
     * @memberof APISSOUser
     */
    loginCount: number;
    /**
     * 
     * @type {string}
     * @memberof APISSOUser
     */
    avatarSrc: string;
    /**
     * 
     * @type {boolean}
     * @memberof APISSOUser
     */
    optedInNotifications: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof APISSOUser
     */
    optedInSubscriptionNotifications: boolean;
    /**
     * 
     * @type {string}
     * @memberof APISSOUser
     */
    displayLabel: string;
    /**
     * 
     * @type {string}
     * @memberof APISSOUser
     */
    displayName: string;
    /**
     * 
     * @type {boolean}
     * @memberof APISSOUser
     */
    isAccountOwner?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof APISSOUser
     */
    isAdminAdmin?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof APISSOUser
     */
    isCommentModeratorAdmin?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof APISSOUser
     */
    isProfileActivityPrivate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof APISSOUser
     */
    isProfileCommentsPrivate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof APISSOUser
     */
    isProfileDMDisabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof APISSOUser
     */
    hasBlockedUsers?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof APISSOUser
     */
    groupIds?: Array<string>;
}

/**
 * Check if a given object implements the APISSOUser interface.
 */
export function instanceOfAPISSOUser(value: object): value is APISSOUser {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('websiteUrl' in value) || value['websiteUrl'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('signUpDate' in value) || value['signUpDate'] === undefined) return false;
    if (!('createdFromUrlId' in value) || value['createdFromUrlId'] === undefined) return false;
    if (!('loginCount' in value) || value['loginCount'] === undefined) return false;
    if (!('avatarSrc' in value) || value['avatarSrc'] === undefined) return false;
    if (!('optedInNotifications' in value) || value['optedInNotifications'] === undefined) return false;
    if (!('optedInSubscriptionNotifications' in value) || value['optedInSubscriptionNotifications'] === undefined) return false;
    if (!('displayLabel' in value) || value['displayLabel'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    return true;
}

export function APISSOUserFromJSON(json: any): APISSOUser {
    return APISSOUserFromJSONTyped(json, false);
}

export function APISSOUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): APISSOUser {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'websiteUrl': json['websiteUrl'],
        'email': json['email'],
        'signUpDate': json['signUpDate'],
        'createdFromUrlId': json['createdFromUrlId'],
        'loginCount': json['loginCount'],
        'avatarSrc': json['avatarSrc'],
        'optedInNotifications': json['optedInNotifications'],
        'optedInSubscriptionNotifications': json['optedInSubscriptionNotifications'],
        'displayLabel': json['displayLabel'],
        'displayName': json['displayName'],
        'isAccountOwner': json['isAccountOwner'] == null ? undefined : json['isAccountOwner'],
        'isAdminAdmin': json['isAdminAdmin'] == null ? undefined : json['isAdminAdmin'],
        'isCommentModeratorAdmin': json['isCommentModeratorAdmin'] == null ? undefined : json['isCommentModeratorAdmin'],
        'isProfileActivityPrivate': json['isProfileActivityPrivate'] == null ? undefined : json['isProfileActivityPrivate'],
        'isProfileCommentsPrivate': json['isProfileCommentsPrivate'] == null ? undefined : json['isProfileCommentsPrivate'],
        'isProfileDMDisabled': json['isProfileDMDisabled'] == null ? undefined : json['isProfileDMDisabled'],
        'hasBlockedUsers': json['hasBlockedUsers'] == null ? undefined : json['hasBlockedUsers'],
        'groupIds': json['groupIds'] == null ? undefined : json['groupIds'],
    };
}

export function APISSOUserToJSON(json: any): APISSOUser {
    return APISSOUserToJSONTyped(json, false);
}

export function APISSOUserToJSONTyped(value?: APISSOUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'username': value['username'],
        'websiteUrl': value['websiteUrl'],
        'email': value['email'],
        'signUpDate': value['signUpDate'],
        'createdFromUrlId': value['createdFromUrlId'],
        'loginCount': value['loginCount'],
        'avatarSrc': value['avatarSrc'],
        'optedInNotifications': value['optedInNotifications'],
        'optedInSubscriptionNotifications': value['optedInSubscriptionNotifications'],
        'displayLabel': value['displayLabel'],
        'displayName': value['displayName'],
        'isAccountOwner': value['isAccountOwner'],
        'isAdminAdmin': value['isAdminAdmin'],
        'isCommentModeratorAdmin': value['isCommentModeratorAdmin'],
        'isProfileActivityPrivate': value['isProfileActivityPrivate'],
        'isProfileCommentsPrivate': value['isProfileCommentsPrivate'],
        'isProfileDMDisabled': value['isProfileDMDisabled'],
        'hasBlockedUsers': value['hasBlockedUsers'],
        'groupIds': value['groupIds'],
    };
}

