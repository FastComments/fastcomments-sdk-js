/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CommentUserBadgeInfo } from './CommentUserBadgeInfo';
import {
    CommentUserBadgeInfoFromJSON,
    CommentUserBadgeInfoFromJSONTyped,
    CommentUserBadgeInfoToJSON,
    CommentUserBadgeInfoToJSONTyped,
} from './CommentUserBadgeInfo';

/**
 * From T, pick a set of properties whose keys are in the union K
 * @export
 * @interface PickOmitFCommentDatePublicCommentPubSubFieldsKeys
 */
export interface PickOmitFCommentDatePublicCommentPubSubFieldsKeys {
    /**
     * 
     * @type {any}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    date: any | null;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    tenantId: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    urlId: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    pageTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    anonUserId?: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    commenterName: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    commenterLink?: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    comment: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    commentHTML: string;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    parentId?: string;
    /**
     * 
     * @type {number}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    votes?: number;
    /**
     * 
     * @type {number}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    votesUp?: number;
    /**
     * 
     * @type {number}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    votesDown?: number;
    /**
     * 
     * @type {Date}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    expireAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    verified: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    reviewed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    avatarSrc?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    isSpam?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    hasImages?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    hasLinks?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    hasCode?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    approved: boolean;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    locale: string;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    isDeleted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    isDeletedUser?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    isBannedUser?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    isByAdmin?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    isByModerator?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    isPinned?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    isLocked?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    flagCount?: number;
    /**
     * 
     * @type {number}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    rating?: number;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    displayLabel?: string;
    /**
     * 
     * @type {Array<CommentUserBadgeInfo>}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    badges?: Array<CommentUserBadgeInfo>;
    /**
     * 
     * @type {string}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    domain?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    feedbackIds?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    groupIds?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof PickOmitFCommentDatePublicCommentPubSubFieldsKeys
     */
    viewCount?: number;
}

/**
 * Check if a given object implements the PickOmitFCommentDatePublicCommentPubSubFieldsKeys interface.
 */
export function instanceOfPickOmitFCommentDatePublicCommentPubSubFieldsKeys(value: object): value is PickOmitFCommentDatePublicCommentPubSubFieldsKeys {
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('urlId' in value) || value['urlId'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('commenterName' in value) || value['commenterName'] === undefined) return false;
    if (!('comment' in value) || value['comment'] === undefined) return false;
    if (!('commentHTML' in value) || value['commentHTML'] === undefined) return false;
    if (!('verified' in value) || value['verified'] === undefined) return false;
    if (!('approved' in value) || value['approved'] === undefined) return false;
    if (!('locale' in value) || value['locale'] === undefined) return false;
    return true;
}

export function PickOmitFCommentDatePublicCommentPubSubFieldsKeysFromJSON(json: any): PickOmitFCommentDatePublicCommentPubSubFieldsKeys {
    return PickOmitFCommentDatePublicCommentPubSubFieldsKeysFromJSONTyped(json, false);
}

export function PickOmitFCommentDatePublicCommentPubSubFieldsKeysFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickOmitFCommentDatePublicCommentPubSubFieldsKeys {
    if (json == null) {
        return json;
    }
    return {
        
        'date': json['date'],
        'id': json['_id'],
        'tenantId': json['tenantId'],
        'urlId': json['urlId'],
        'url': json['url'],
        'pageTitle': json['pageTitle'] == null ? undefined : json['pageTitle'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'anonUserId': json['anonUserId'] == null ? undefined : json['anonUserId'],
        'commenterName': json['commenterName'],
        'commenterLink': json['commenterLink'] == null ? undefined : json['commenterLink'],
        'comment': json['comment'],
        'commentHTML': json['commentHTML'],
        'parentId': json['parentId'] == null ? undefined : json['parentId'],
        'votes': json['votes'] == null ? undefined : json['votes'],
        'votesUp': json['votesUp'] == null ? undefined : json['votesUp'],
        'votesDown': json['votesDown'] == null ? undefined : json['votesDown'],
        'expireAt': json['expireAt'] == null ? undefined : (new Date(json['expireAt'])),
        'verified': json['verified'],
        'reviewed': json['reviewed'] == null ? undefined : json['reviewed'],
        'avatarSrc': json['avatarSrc'] == null ? undefined : json['avatarSrc'],
        'isSpam': json['isSpam'] == null ? undefined : json['isSpam'],
        'hasImages': json['hasImages'] == null ? undefined : json['hasImages'],
        'hasLinks': json['hasLinks'] == null ? undefined : json['hasLinks'],
        'hasCode': json['hasCode'] == null ? undefined : json['hasCode'],
        'approved': json['approved'],
        'locale': json['locale'],
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
        'isDeletedUser': json['isDeletedUser'] == null ? undefined : json['isDeletedUser'],
        'isBannedUser': json['isBannedUser'] == null ? undefined : json['isBannedUser'],
        'isByAdmin': json['isByAdmin'] == null ? undefined : json['isByAdmin'],
        'isByModerator': json['isByModerator'] == null ? undefined : json['isByModerator'],
        'isPinned': json['isPinned'] == null ? undefined : json['isPinned'],
        'isLocked': json['isLocked'] == null ? undefined : json['isLocked'],
        'flagCount': json['flagCount'] == null ? undefined : json['flagCount'],
        'rating': json['rating'] == null ? undefined : json['rating'],
        'displayLabel': json['displayLabel'] == null ? undefined : json['displayLabel'],
        'badges': json['badges'] == null ? undefined : ((json['badges'] as Array<any>).map(CommentUserBadgeInfoFromJSON)),
        'domain': json['domain'] == null ? undefined : json['domain'],
        'feedbackIds': json['feedbackIds'] == null ? undefined : json['feedbackIds'],
        'groupIds': json['groupIds'] == null ? undefined : json['groupIds'],
        'viewCount': json['viewCount'] == null ? undefined : json['viewCount'],
    };
}

export function PickOmitFCommentDatePublicCommentPubSubFieldsKeysToJSON(json: any): PickOmitFCommentDatePublicCommentPubSubFieldsKeys {
    return PickOmitFCommentDatePublicCommentPubSubFieldsKeysToJSONTyped(json, false);
}

export function PickOmitFCommentDatePublicCommentPubSubFieldsKeysToJSONTyped(value?: PickOmitFCommentDatePublicCommentPubSubFieldsKeys | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': value['date'],
        '_id': value['id'],
        'tenantId': value['tenantId'],
        'urlId': value['urlId'],
        'url': value['url'],
        'pageTitle': value['pageTitle'],
        'userId': value['userId'],
        'anonUserId': value['anonUserId'],
        'commenterName': value['commenterName'],
        'commenterLink': value['commenterLink'],
        'comment': value['comment'],
        'commentHTML': value['commentHTML'],
        'parentId': value['parentId'],
        'votes': value['votes'],
        'votesUp': value['votesUp'],
        'votesDown': value['votesDown'],
        'expireAt': value['expireAt'] == null ? undefined : ((value['expireAt']).toISOString()),
        'verified': value['verified'],
        'reviewed': value['reviewed'],
        'avatarSrc': value['avatarSrc'],
        'isSpam': value['isSpam'],
        'hasImages': value['hasImages'],
        'hasLinks': value['hasLinks'],
        'hasCode': value['hasCode'],
        'approved': value['approved'],
        'locale': value['locale'],
        'isDeleted': value['isDeleted'],
        'isDeletedUser': value['isDeletedUser'],
        'isBannedUser': value['isBannedUser'],
        'isByAdmin': value['isByAdmin'],
        'isByModerator': value['isByModerator'],
        'isPinned': value['isPinned'],
        'isLocked': value['isLocked'],
        'flagCount': value['flagCount'],
        'rating': value['rating'],
        'displayLabel': value['displayLabel'],
        'badges': value['badges'] == null ? undefined : ((value['badges'] as Array<any>).map(CommentUserBadgeInfoToJSON)),
        'domain': value['domain'],
        'feedbackIds': value['feedbackIds'],
        'groupIds': value['groupIds'],
        'viewCount': value['viewCount'],
    };
}

