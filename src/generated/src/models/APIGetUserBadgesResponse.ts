/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserBadge } from './UserBadge';
import {
    UserBadgeFromJSON,
    UserBadgeFromJSONTyped,
    UserBadgeToJSON,
    UserBadgeToJSONTyped,
} from './UserBadge';
import type { APIStatus } from './APIStatus';
import {
    APIStatusFromJSON,
    APIStatusFromJSONTyped,
    APIStatusToJSON,
    APIStatusToJSONTyped,
} from './APIStatus';

/**
 * 
 * @export
 * @interface APIGetUserBadgesResponse
 */
export interface APIGetUserBadgesResponse {
    /**
     * 
     * @type {APIStatus}
     * @memberof APIGetUserBadgesResponse
     */
    status: APIStatus;
    /**
     * 
     * @type {Array<UserBadge>}
     * @memberof APIGetUserBadgesResponse
     */
    userBadges: Array<UserBadge>;
}



/**
 * Check if a given object implements the APIGetUserBadgesResponse interface.
 */
export function instanceOfAPIGetUserBadgesResponse(value: object): value is APIGetUserBadgesResponse {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('userBadges' in value) || value['userBadges'] === undefined) return false;
    return true;
}

export function APIGetUserBadgesResponseFromJSON(json: any): APIGetUserBadgesResponse {
    return APIGetUserBadgesResponseFromJSONTyped(json, false);
}

export function APIGetUserBadgesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIGetUserBadgesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': APIStatusFromJSON(json['status']),
        'userBadges': ((json['userBadges'] as Array<any>).map(UserBadgeFromJSON)),
    };
}

export function APIGetUserBadgesResponseToJSON(json: any): APIGetUserBadgesResponse {
    return APIGetUserBadgesResponseToJSONTyped(json, false);
}

export function APIGetUserBadgesResponseToJSONTyped(value?: APIGetUserBadgesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': APIStatusToJSON(value['status']),
        'userBadges': ((value['userBadges'] as Array<any>).map(UserBadgeToJSON)),
    };
}

