/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FComment } from './FComment';
import {
    FCommentFromJSON,
    FCommentFromJSONTyped,
    FCommentToJSON,
    FCommentToJSONTyped,
} from './FComment';
import type { QuestionResult } from './QuestionResult';
import {
    QuestionResultFromJSON,
    QuestionResultFromJSONTyped,
    QuestionResultToJSON,
    QuestionResultToJSONTyped,
} from './QuestionResult';

/**
 * 
 * @export
 * @interface FindCommentsByRangeItem
 */
export interface FindCommentsByRangeItem {
    /**
     * 
     * @type {FComment}
     * @memberof FindCommentsByRangeItem
     */
    comment: FComment | null;
    /**
     * 
     * @type {QuestionResult}
     * @memberof FindCommentsByRangeItem
     */
    result: QuestionResult;
}

/**
 * Check if a given object implements the FindCommentsByRangeItem interface.
 */
export function instanceOfFindCommentsByRangeItem(value: object): value is FindCommentsByRangeItem {
    if (!('comment' in value) || value['comment'] === undefined) return false;
    if (!('result' in value) || value['result'] === undefined) return false;
    return true;
}

export function FindCommentsByRangeItemFromJSON(json: any): FindCommentsByRangeItem {
    return FindCommentsByRangeItemFromJSONTyped(json, false);
}

export function FindCommentsByRangeItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): FindCommentsByRangeItem {
    if (json == null) {
        return json;
    }
    return {
        
        'comment': FCommentFromJSON(json['comment']),
        'result': QuestionResultFromJSON(json['result']),
    };
}

export function FindCommentsByRangeItemToJSON(json: any): FindCommentsByRangeItem {
    return FindCommentsByRangeItemToJSONTyped(json, false);
}

export function FindCommentsByRangeItemToJSONTyped(value?: FindCommentsByRangeItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'comment': FCommentToJSON(value['comment']),
        'result': QuestionResultToJSON(value['result']),
    };
}

