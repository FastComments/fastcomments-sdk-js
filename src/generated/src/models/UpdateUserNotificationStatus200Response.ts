/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomConfigParameters } from './CustomConfigParameters';
import {
    CustomConfigParametersFromJSON,
    CustomConfigParametersFromJSONTyped,
    CustomConfigParametersToJSON,
    CustomConfigParametersToJSONTyped,
} from './CustomConfigParameters';
import type { ImportedAPIStatusFAILED } from './ImportedAPIStatusFAILED';
import {
    ImportedAPIStatusFAILEDFromJSON,
    ImportedAPIStatusFAILEDFromJSONTyped,
    ImportedAPIStatusFAILEDToJSON,
    ImportedAPIStatusFAILEDToJSONTyped,
} from './ImportedAPIStatusFAILED';
import type { UserNotificationWriteResponse } from './UserNotificationWriteResponse';
import {
    UserNotificationWriteResponseFromJSON,
    UserNotificationWriteResponseFromJSONTyped,
    UserNotificationWriteResponseToJSON,
    UserNotificationWriteResponseToJSONTyped,
} from './UserNotificationWriteResponse';
import type { APIError } from './APIError';
import {
    APIErrorFromJSON,
    APIErrorFromJSONTyped,
    APIErrorToJSON,
    APIErrorToJSONTyped,
} from './APIError';
import type { IgnoredResponse } from './IgnoredResponse';
import {
    IgnoredResponseFromJSON,
    IgnoredResponseFromJSONTyped,
    IgnoredResponseToJSON,
    IgnoredResponseToJSONTyped,
} from './IgnoredResponse';

/**
 * 
 * @export
 * @interface UpdateUserNotificationStatus200Response
 */
export interface UpdateUserNotificationStatus200Response {
    /**
     * 
     * @type {ImportedAPIStatusFAILED}
     * @memberof UpdateUserNotificationStatus200Response
     */
    status: ImportedAPIStatusFAILED;
    /**
     * 
     * @type {number}
     * @memberof UpdateUserNotificationStatus200Response
     */
    matchedCount: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateUserNotificationStatus200Response
     */
    modifiedCount: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserNotificationStatus200Response
     */
    note: UpdateUserNotificationStatus200ResponseNoteEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserNotificationStatus200Response
     */
    reason: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserNotificationStatus200Response
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserNotificationStatus200Response
     */
    secondaryCode?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateUserNotificationStatus200Response
     */
    bannedUntil?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateUserNotificationStatus200Response
     */
    maxCharacterLength?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserNotificationStatus200Response
     */
    translatedError?: string;
    /**
     * 
     * @type {CustomConfigParameters}
     * @memberof UpdateUserNotificationStatus200Response
     */
    customConfig?: CustomConfigParameters;
}

/**
* @export
* @enum {string}
*/
export enum UpdateUserNotificationStatus200ResponseNoteEnum {
    ignored_since_impersonated = 'ignored-since-impersonated',
    demo_noop = 'demo-noop'
}


/**
 * Check if a given object implements the UpdateUserNotificationStatus200Response interface.
 */
export function instanceOfUpdateUserNotificationStatus200Response(value: object): value is UpdateUserNotificationStatus200Response {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('matchedCount' in value) || value['matchedCount'] === undefined) return false;
    if (!('modifiedCount' in value) || value['modifiedCount'] === undefined) return false;
    if (!('note' in value) || value['note'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    return true;
}

export function UpdateUserNotificationStatus200ResponseFromJSON(json: any): UpdateUserNotificationStatus200Response {
    return UpdateUserNotificationStatus200ResponseFromJSONTyped(json, false);
}

export function UpdateUserNotificationStatus200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserNotificationStatus200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'status': ImportedAPIStatusFAILEDFromJSON(json['status']),
        'matchedCount': json['matchedCount'],
        'modifiedCount': json['modifiedCount'],
        'note': json['note'],
        'reason': json['reason'],
        'code': json['code'],
        'secondaryCode': json['secondaryCode'] == null ? undefined : json['secondaryCode'],
        'bannedUntil': json['bannedUntil'] == null ? undefined : json['bannedUntil'],
        'maxCharacterLength': json['maxCharacterLength'] == null ? undefined : json['maxCharacterLength'],
        'translatedError': json['translatedError'] == null ? undefined : json['translatedError'],
        'customConfig': json['customConfig'] == null ? undefined : CustomConfigParametersFromJSON(json['customConfig']),
    };
}

export function UpdateUserNotificationStatus200ResponseToJSON(json: any): UpdateUserNotificationStatus200Response {
    return UpdateUserNotificationStatus200ResponseToJSONTyped(json, false);
}

export function UpdateUserNotificationStatus200ResponseToJSONTyped(value?: UpdateUserNotificationStatus200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': ImportedAPIStatusFAILEDToJSON(value['status']),
        'matchedCount': value['matchedCount'],
        'modifiedCount': value['modifiedCount'],
        'note': value['note'],
        'reason': value['reason'],
        'code': value['code'],
        'secondaryCode': value['secondaryCode'],
        'bannedUntil': value['bannedUntil'],
        'maxCharacterLength': value['maxCharacterLength'],
        'translatedError': value['translatedError'],
        'customConfig': CustomConfigParametersToJSON(value['customConfig']),
    };
}

