/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecordStringBeforeStringOrNullAfterStringOrNullValue } from './RecordStringBeforeStringOrNullAfterStringOrNullValue';
import {
    RecordStringBeforeStringOrNullAfterStringOrNullValueFromJSON,
    RecordStringBeforeStringOrNullAfterStringOrNullValueFromJSONTyped,
    RecordStringBeforeStringOrNullAfterStringOrNullValueToJSON,
    RecordStringBeforeStringOrNullAfterStringOrNullValueToJSONTyped,
} from './RecordStringBeforeStringOrNullAfterStringOrNullValue';
import type { ImportedAPIStatusSUCCESS } from './ImportedAPIStatusSUCCESS';
import {
    ImportedAPIStatusSUCCESSFromJSON,
    ImportedAPIStatusSUCCESSFromJSONTyped,
    ImportedAPIStatusSUCCESSToJSON,
    ImportedAPIStatusSUCCESSToJSONTyped,
} from './ImportedAPIStatusSUCCESS';

/**
 * 
 * @export
 * @interface ChangeCommentPinStatusResponse
 */
export interface ChangeCommentPinStatusResponse {
    /**
     * Construct a type with a set of properties K of type T
     * @type {{ [key: string]: RecordStringBeforeStringOrNullAfterStringOrNullValue; }}
     * @memberof ChangeCommentPinStatusResponse
     */
    commentPositions: { [key: string]: RecordStringBeforeStringOrNullAfterStringOrNullValue; };
    /**
     * 
     * @type {ImportedAPIStatusSUCCESS}
     * @memberof ChangeCommentPinStatusResponse
     */
    status: ImportedAPIStatusSUCCESS;
}



/**
 * Check if a given object implements the ChangeCommentPinStatusResponse interface.
 */
export function instanceOfChangeCommentPinStatusResponse(value: object): value is ChangeCommentPinStatusResponse {
    if (!('commentPositions' in value) || value['commentPositions'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function ChangeCommentPinStatusResponseFromJSON(json: any): ChangeCommentPinStatusResponse {
    return ChangeCommentPinStatusResponseFromJSONTyped(json, false);
}

export function ChangeCommentPinStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeCommentPinStatusResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'commentPositions': (mapValues(json['commentPositions'], RecordStringBeforeStringOrNullAfterStringOrNullValueFromJSON)),
        'status': ImportedAPIStatusSUCCESSFromJSON(json['status']),
    };
}

export function ChangeCommentPinStatusResponseToJSON(json: any): ChangeCommentPinStatusResponse {
    return ChangeCommentPinStatusResponseToJSONTyped(json, false);
}

export function ChangeCommentPinStatusResponseToJSONTyped(value?: ChangeCommentPinStatusResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'commentPositions': (mapValues(value['commentPositions'], RecordStringBeforeStringOrNullAfterStringOrNullValueToJSON)),
        'status': ImportedAPIStatusSUCCESSToJSON(value['status']),
    };
}

