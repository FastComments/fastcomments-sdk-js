/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImportedAPIStatusSUCCESS } from './ImportedAPIStatusSUCCESS';
import {
    ImportedAPIStatusSUCCESSFromJSON,
    ImportedAPIStatusSUCCESSFromJSONTyped,
    ImportedAPIStatusSUCCESSToJSON,
    ImportedAPIStatusSUCCESSToJSONTyped,
} from './ImportedAPIStatusSUCCESS';
import type { PublicComment } from './PublicComment';
import {
    PublicCommentFromJSON,
    PublicCommentFromJSONTyped,
    PublicCommentToJSON,
    PublicCommentToJSONTyped,
} from './PublicComment';
import type { UserSessionInfo } from './UserSessionInfo';
import {
    UserSessionInfoFromJSON,
    UserSessionInfoFromJSONTyped,
    UserSessionInfoToJSON,
    UserSessionInfoToJSONTyped,
} from './UserSessionInfo';

/**
 * 
 * @export
 * @interface SaveCommentsResponseWithPresence
 */
export interface SaveCommentsResponseWithPresence {
    /**
     * 
     * @type {ImportedAPIStatusSUCCESS}
     * @memberof SaveCommentsResponseWithPresence
     */
    status: ImportedAPIStatusSUCCESS;
    /**
     * 
     * @type {PublicComment}
     * @memberof SaveCommentsResponseWithPresence
     */
    comment: PublicComment;
    /**
     * 
     * @type {UserSessionInfo}
     * @memberof SaveCommentsResponseWithPresence
     */
    user: UserSessionInfo | null;
    /**
     * Construct a type with a set of properties K of type T
     * @type {{ [key: string]: object; }}
     * @memberof SaveCommentsResponseWithPresence
     */
    moduleData?: { [key: string]: object; };
    /**
     * 
     * @type {string}
     * @memberof SaveCommentsResponseWithPresence
     */
    userIdWS?: string;
}



/**
 * Check if a given object implements the SaveCommentsResponseWithPresence interface.
 */
export function instanceOfSaveCommentsResponseWithPresence(value: object): value is SaveCommentsResponseWithPresence {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('comment' in value) || value['comment'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function SaveCommentsResponseWithPresenceFromJSON(json: any): SaveCommentsResponseWithPresence {
    return SaveCommentsResponseWithPresenceFromJSONTyped(json, false);
}

export function SaveCommentsResponseWithPresenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SaveCommentsResponseWithPresence {
    if (json == null) {
        return json;
    }
    return {
        
        'status': ImportedAPIStatusSUCCESSFromJSON(json['status']),
        'comment': PublicCommentFromJSON(json['comment']),
        'user': UserSessionInfoFromJSON(json['user']),
        'moduleData': json['moduleData'] == null ? undefined : json['moduleData'],
        'userIdWS': json['userIdWS'] == null ? undefined : json['userIdWS'],
    };
}

export function SaveCommentsResponseWithPresenceToJSON(json: any): SaveCommentsResponseWithPresence {
    return SaveCommentsResponseWithPresenceToJSONTyped(json, false);
}

export function SaveCommentsResponseWithPresenceToJSONTyped(value?: SaveCommentsResponseWithPresence | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': ImportedAPIStatusSUCCESSToJSON(value['status']),
        'comment': PublicCommentToJSON(value['comment']),
        'user': UserSessionInfoToJSON(value['user']),
        'moduleData': value['moduleData'],
        'userIdWS': value['userIdWS'],
    };
}

