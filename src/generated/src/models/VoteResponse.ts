/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VoteResponseStatus } from './VoteResponseStatus';
import {
    VoteResponseStatusFromJSON,
    VoteResponseStatusFromJSONTyped,
    VoteResponseStatusToJSON,
    VoteResponseStatusToJSONTyped,
} from './VoteResponseStatus';
import type { VoteResponseUser } from './VoteResponseUser';
import {
    VoteResponseUserFromJSON,
    VoteResponseUserFromJSONTyped,
    VoteResponseUserToJSON,
    VoteResponseUserToJSONTyped,
} from './VoteResponseUser';

/**
 * 
 * @export
 * @interface VoteResponse
 */
export interface VoteResponse {
    /**
     * 
     * @type {VoteResponseStatus}
     * @memberof VoteResponse
     */
    status: VoteResponseStatus;
    /**
     * 
     * @type {string}
     * @memberof VoteResponse
     */
    voteId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof VoteResponse
     */
    isVerified?: boolean;
    /**
     * 
     * @type {VoteResponseUser}
     * @memberof VoteResponse
     */
    user?: VoteResponseUser;
    /**
     * 
     * @type {string}
     * @memberof VoteResponse
     */
    editKey?: string;
}

/**
 * Check if a given object implements the VoteResponse interface.
 */
export function instanceOfVoteResponse(value: object): value is VoteResponse {
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function VoteResponseFromJSON(json: any): VoteResponse {
    return VoteResponseFromJSONTyped(json, false);
}

export function VoteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VoteResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': VoteResponseStatusFromJSON(json['status']),
        'voteId': json['voteId'] == null ? undefined : json['voteId'],
        'isVerified': json['isVerified'] == null ? undefined : json['isVerified'],
        'user': json['user'] == null ? undefined : VoteResponseUserFromJSON(json['user']),
        'editKey': json['editKey'] == null ? undefined : json['editKey'],
    };
}

export function VoteResponseToJSON(json: any): VoteResponse {
    return VoteResponseToJSONTyped(json, false);
}

export function VoteResponseToJSONTyped(value?: VoteResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': VoteResponseStatusToJSON(value['status']),
        'voteId': value['voteId'],
        'isVerified': value['isVerified'],
        'user': VoteResponseUserToJSON(value['user']),
        'editKey': value['editKey'],
    };
}

