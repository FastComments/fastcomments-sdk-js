/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetCommentsResponseWithPresencePublicComment } from './GetCommentsResponseWithPresencePublicComment';
import {
    GetCommentsResponseWithPresencePublicCommentFromJSON,
    GetCommentsResponseWithPresencePublicCommentFromJSONTyped,
    GetCommentsResponseWithPresencePublicCommentToJSON,
    GetCommentsResponseWithPresencePublicCommentToJSONTyped,
} from './GetCommentsResponseWithPresencePublicComment';
import type { CustomConfigParameters } from './CustomConfigParameters';
import {
    CustomConfigParametersFromJSON,
    CustomConfigParametersFromJSONTyped,
    CustomConfigParametersToJSON,
    CustomConfigParametersToJSONTyped,
} from './CustomConfigParameters';
import type { ImportedAPIStatusFAILED } from './ImportedAPIStatusFAILED';
import {
    ImportedAPIStatusFAILEDFromJSON,
    ImportedAPIStatusFAILEDFromJSONTyped,
    ImportedAPIStatusFAILEDToJSON,
    ImportedAPIStatusFAILEDToJSONTyped,
} from './ImportedAPIStatusFAILED';
import type { PublicComment } from './PublicComment';
import {
    PublicCommentFromJSON,
    PublicCommentFromJSONTyped,
    PublicCommentToJSON,
    PublicCommentToJSONTyped,
} from './PublicComment';
import type { APIError } from './APIError';
import {
    APIErrorFromJSON,
    APIErrorFromJSONTyped,
    APIErrorToJSON,
    APIErrorToJSONTyped,
} from './APIError';
import type { UserSessionInfo } from './UserSessionInfo';
import {
    UserSessionInfoFromJSON,
    UserSessionInfoFromJSONTyped,
    UserSessionInfoToJSON,
    UserSessionInfoToJSONTyped,
} from './UserSessionInfo';

/**
 * 
 * @export
 * @interface GetCommentsPublic200Response
 */
export interface GetCommentsPublic200Response {
    /**
     * 
     * @type {number}
     * @memberof GetCommentsPublic200Response
     */
    statusCode?: number;
    /**
     * 
     * @type {ImportedAPIStatusFAILED}
     * @memberof GetCommentsPublic200Response
     */
    status: ImportedAPIStatusFAILED;
    /**
     * 
     * @type {string}
     * @memberof GetCommentsPublic200Response
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof GetCommentsPublic200Response
     */
    reason: string;
    /**
     * 
     * @type {string}
     * @memberof GetCommentsPublic200Response
     */
    translatedWarning?: string;
    /**
     * 
     * @type {Array<PublicComment>}
     * @memberof GetCommentsPublic200Response
     */
    comments: Array<PublicComment>;
    /**
     * 
     * @type {UserSessionInfo}
     * @memberof GetCommentsPublic200Response
     */
    user: UserSessionInfo | null;
    /**
     * 
     * @type {string}
     * @memberof GetCommentsPublic200Response
     */
    urlIdClean?: string;
    /**
     * 
     * @type {number}
     * @memberof GetCommentsPublic200Response
     */
    lastGenDate?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof GetCommentsPublic200Response
     */
    includesPastPages?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCommentsPublic200Response
     */
    isDemo?: boolean;
    /**
     * 
     * @type {number}
     * @memberof GetCommentsPublic200Response
     */
    commentCount?: number;
    /**
     * 
     * @type {boolean}
     * @memberof GetCommentsPublic200Response
     */
    isSiteAdmin?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCommentsPublic200Response
     */
    hasBillingIssue?: boolean;
    /**
     * Construct a type with a set of properties K of type T
     * @type {{ [key: string]: object; }}
     * @memberof GetCommentsPublic200Response
     */
    moduleData?: { [key: string]: object; };
    /**
     * 
     * @type {number}
     * @memberof GetCommentsPublic200Response
     */
    pageNumber: number;
    /**
     * 
     * @type {boolean}
     * @memberof GetCommentsPublic200Response
     */
    isWhiteLabeled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCommentsPublic200Response
     */
    isProd?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCommentsPublic200Response
     */
    isCrawler?: boolean;
    /**
     * 
     * @type {number}
     * @memberof GetCommentsPublic200Response
     */
    notificationCount?: number;
    /**
     * 
     * @type {boolean}
     * @memberof GetCommentsPublic200Response
     */
    hasMore?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCommentsPublic200Response
     */
    isClosed?: boolean;
    /**
     * 
     * @type {number}
     * @memberof GetCommentsPublic200Response
     */
    presencePollState?: number;
    /**
     * 
     * @type {CustomConfigParameters}
     * @memberof GetCommentsPublic200Response
     */
    customConfig?: CustomConfigParameters;
    /**
     * 
     * @type {string}
     * @memberof GetCommentsPublic200Response
     */
    urlIdWS?: string;
    /**
     * 
     * @type {string}
     * @memberof GetCommentsPublic200Response
     */
    userIdWS?: string;
    /**
     * 
     * @type {string}
     * @memberof GetCommentsPublic200Response
     */
    tenantIdWS?: string;
    /**
     * 
     * @type {string}
     * @memberof GetCommentsPublic200Response
     */
    secondaryCode?: string;
    /**
     * 
     * @type {number}
     * @memberof GetCommentsPublic200Response
     */
    bannedUntil?: number;
    /**
     * 
     * @type {number}
     * @memberof GetCommentsPublic200Response
     */
    maxCharacterLength?: number;
    /**
     * 
     * @type {string}
     * @memberof GetCommentsPublic200Response
     */
    translatedError?: string;
}



/**
 * Check if a given object implements the GetCommentsPublic200Response interface.
 */
export function instanceOfGetCommentsPublic200Response(value: object): value is GetCommentsPublic200Response {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    if (!('comments' in value) || value['comments'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('pageNumber' in value) || value['pageNumber'] === undefined) return false;
    return true;
}

export function GetCommentsPublic200ResponseFromJSON(json: any): GetCommentsPublic200Response {
    return GetCommentsPublic200ResponseFromJSONTyped(json, false);
}

export function GetCommentsPublic200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCommentsPublic200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'statusCode': json['statusCode'] == null ? undefined : json['statusCode'],
        'status': ImportedAPIStatusFAILEDFromJSON(json['status']),
        'code': json['code'],
        'reason': json['reason'],
        'translatedWarning': json['translatedWarning'] == null ? undefined : json['translatedWarning'],
        'comments': ((json['comments'] as Array<any>).map(PublicCommentFromJSON)),
        'user': UserSessionInfoFromJSON(json['user']),
        'urlIdClean': json['urlIdClean'] == null ? undefined : json['urlIdClean'],
        'lastGenDate': json['lastGenDate'] == null ? undefined : json['lastGenDate'],
        'includesPastPages': json['includesPastPages'] == null ? undefined : json['includesPastPages'],
        'isDemo': json['isDemo'] == null ? undefined : json['isDemo'],
        'commentCount': json['commentCount'] == null ? undefined : json['commentCount'],
        'isSiteAdmin': json['isSiteAdmin'] == null ? undefined : json['isSiteAdmin'],
        'hasBillingIssue': json['hasBillingIssue'] == null ? undefined : json['hasBillingIssue'],
        'moduleData': json['moduleData'] == null ? undefined : json['moduleData'],
        'pageNumber': json['pageNumber'],
        'isWhiteLabeled': json['isWhiteLabeled'] == null ? undefined : json['isWhiteLabeled'],
        'isProd': json['isProd'] == null ? undefined : json['isProd'],
        'isCrawler': json['isCrawler'] == null ? undefined : json['isCrawler'],
        'notificationCount': json['notificationCount'] == null ? undefined : json['notificationCount'],
        'hasMore': json['hasMore'] == null ? undefined : json['hasMore'],
        'isClosed': json['isClosed'] == null ? undefined : json['isClosed'],
        'presencePollState': json['presencePollState'] == null ? undefined : json['presencePollState'],
        'customConfig': json['customConfig'] == null ? undefined : CustomConfigParametersFromJSON(json['customConfig']),
        'urlIdWS': json['urlIdWS'] == null ? undefined : json['urlIdWS'],
        'userIdWS': json['userIdWS'] == null ? undefined : json['userIdWS'],
        'tenantIdWS': json['tenantIdWS'] == null ? undefined : json['tenantIdWS'],
        'secondaryCode': json['secondaryCode'] == null ? undefined : json['secondaryCode'],
        'bannedUntil': json['bannedUntil'] == null ? undefined : json['bannedUntil'],
        'maxCharacterLength': json['maxCharacterLength'] == null ? undefined : json['maxCharacterLength'],
        'translatedError': json['translatedError'] == null ? undefined : json['translatedError'],
    };
}

export function GetCommentsPublic200ResponseToJSON(json: any): GetCommentsPublic200Response {
    return GetCommentsPublic200ResponseToJSONTyped(json, false);
}

export function GetCommentsPublic200ResponseToJSONTyped(value?: GetCommentsPublic200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'statusCode': value['statusCode'],
        'status': ImportedAPIStatusFAILEDToJSON(value['status']),
        'code': value['code'],
        'reason': value['reason'],
        'translatedWarning': value['translatedWarning'],
        'comments': ((value['comments'] as Array<any>).map(PublicCommentToJSON)),
        'user': UserSessionInfoToJSON(value['user']),
        'urlIdClean': value['urlIdClean'],
        'lastGenDate': value['lastGenDate'],
        'includesPastPages': value['includesPastPages'],
        'isDemo': value['isDemo'],
        'commentCount': value['commentCount'],
        'isSiteAdmin': value['isSiteAdmin'],
        'hasBillingIssue': value['hasBillingIssue'],
        'moduleData': value['moduleData'],
        'pageNumber': value['pageNumber'],
        'isWhiteLabeled': value['isWhiteLabeled'],
        'isProd': value['isProd'],
        'isCrawler': value['isCrawler'],
        'notificationCount': value['notificationCount'],
        'hasMore': value['hasMore'],
        'isClosed': value['isClosed'],
        'presencePollState': value['presencePollState'],
        'customConfig': CustomConfigParametersToJSON(value['customConfig']),
        'urlIdWS': value['urlIdWS'],
        'userIdWS': value['userIdWS'],
        'tenantIdWS': value['tenantIdWS'],
        'secondaryCode': value['secondaryCode'],
        'bannedUntil': value['bannedUntil'],
        'maxCharacterLength': value['maxCharacterLength'],
        'translatedError': value['translatedError'],
    };
}

