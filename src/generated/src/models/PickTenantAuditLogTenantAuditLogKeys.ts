/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * From T, pick a set of properties whose keys are in the union K
 * @export
 * @interface PickTenantAuditLogTenantAuditLogKeys
 */
export interface PickTenantAuditLogTenantAuditLogKeys {
    /**
     * 
     * @type {string}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    resourceName: string;
    /**
     * 
     * @type {string}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    crudType: PickTenantAuditLogTenantAuditLogKeysCrudTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    from?: PickTenantAuditLogTenantAuditLogKeysFromEnum;
    /**
     * 
     * @type {string}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    ip?: string;
    /**
     * 
     * @type {Date}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    when?: Date;
    /**
     * 
     * @type {string}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    serverStartDate?: Date;
    /**
     * Construct a type with a set of properties K of type T
     * @type {{ [key: string]: any; }}
     * @memberof PickTenantAuditLogTenantAuditLogKeys
     */
    objectDetails?: { [key: string]: any; };
}

/**
* @export
* @enum {string}
*/
export enum PickTenantAuditLogTenantAuditLogKeysCrudTypeEnum {
    c = 'c',
    r = 'r',
    u = 'u',
    d = 'd',
    login = 'login'
}
/**
* @export
* @enum {string}
*/
export enum PickTenantAuditLogTenantAuditLogKeysFromEnum {
    ui = 'ui',
    api = 'api',
    cron = 'cron'
}


/**
 * Check if a given object implements the PickTenantAuditLogTenantAuditLogKeys interface.
 */
export function instanceOfPickTenantAuditLogTenantAuditLogKeys(value: object): value is PickTenantAuditLogTenantAuditLogKeys {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('resourceName' in value) || value['resourceName'] === undefined) return false;
    if (!('crudType' in value) || value['crudType'] === undefined) return false;
    return true;
}

export function PickTenantAuditLogTenantAuditLogKeysFromJSON(json: any): PickTenantAuditLogTenantAuditLogKeys {
    return PickTenantAuditLogTenantAuditLogKeysFromJSONTyped(json, false);
}

export function PickTenantAuditLogTenantAuditLogKeysFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickTenantAuditLogTenantAuditLogKeys {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'url': json['url'] == null ? undefined : json['url'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'username': json['username'] == null ? undefined : json['username'],
        'resourceName': json['resourceName'],
        'crudType': json['crudType'],
        'from': json['from'] == null ? undefined : json['from'],
        'ip': json['ip'] == null ? undefined : json['ip'],
        'when': json['when'] == null ? undefined : (new Date(json['when'])),
        'description': json['description'] == null ? undefined : json['description'],
        'serverStartDate': json['serverStartDate'] == null ? undefined : (new Date(json['serverStartDate'])),
        'objectDetails': json['objectDetails'] == null ? undefined : json['objectDetails'],
    };
}

export function PickTenantAuditLogTenantAuditLogKeysToJSON(json: any): PickTenantAuditLogTenantAuditLogKeys {
    return PickTenantAuditLogTenantAuditLogKeysToJSONTyped(json, false);
}

export function PickTenantAuditLogTenantAuditLogKeysToJSONTyped(value?: PickTenantAuditLogTenantAuditLogKeys | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'url': value['url'],
        'userId': value['userId'],
        'username': value['username'],
        'resourceName': value['resourceName'],
        'crudType': value['crudType'],
        'from': value['from'],
        'ip': value['ip'],
        'when': value['when'] == null ? undefined : ((value['when']).toISOString()),
        'description': value['description'],
        'serverStartDate': value['serverStartDate'] == null ? undefined : ((value['serverStartDate']).toISOString()),
        'objectDetails': value['objectDetails'],
    };
}

