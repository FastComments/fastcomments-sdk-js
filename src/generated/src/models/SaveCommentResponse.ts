/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImportedAPIStatusSUCCESS } from './ImportedAPIStatusSUCCESS';
import {
    ImportedAPIStatusSUCCESSFromJSON,
    ImportedAPIStatusSUCCESSFromJSONTyped,
    ImportedAPIStatusSUCCESSToJSON,
    ImportedAPIStatusSUCCESSToJSONTyped,
} from './ImportedAPIStatusSUCCESS';
import type { FComment } from './FComment';
import {
    FCommentFromJSON,
    FCommentFromJSONTyped,
    FCommentToJSON,
    FCommentToJSONTyped,
} from './FComment';
import type { UserSessionInfo } from './UserSessionInfo';
import {
    UserSessionInfoFromJSON,
    UserSessionInfoFromJSONTyped,
    UserSessionInfoToJSON,
    UserSessionInfoToJSONTyped,
} from './UserSessionInfo';

/**
 * 
 * @export
 * @interface SaveCommentResponse
 */
export interface SaveCommentResponse {
    /**
     * 
     * @type {ImportedAPIStatusSUCCESS}
     * @memberof SaveCommentResponse
     */
    status: ImportedAPIStatusSUCCESS;
    /**
     * 
     * @type {FComment}
     * @memberof SaveCommentResponse
     */
    comment: FComment;
    /**
     * 
     * @type {UserSessionInfo}
     * @memberof SaveCommentResponse
     */
    user: UserSessionInfo | null;
    /**
     * Construct a type with a set of properties K of type T
     * @type {{ [key: string]: any; }}
     * @memberof SaveCommentResponse
     */
    moduleData?: { [key: string]: any; };
}



/**
 * Check if a given object implements the SaveCommentResponse interface.
 */
export function instanceOfSaveCommentResponse(value: object): value is SaveCommentResponse {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('comment' in value) || value['comment'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function SaveCommentResponseFromJSON(json: any): SaveCommentResponse {
    return SaveCommentResponseFromJSONTyped(json, false);
}

export function SaveCommentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SaveCommentResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': ImportedAPIStatusSUCCESSFromJSON(json['status']),
        'comment': FCommentFromJSON(json['comment']),
        'user': UserSessionInfoFromJSON(json['user']),
        'moduleData': json['moduleData'] == null ? undefined : json['moduleData'],
    };
}

export function SaveCommentResponseToJSON(json: any): SaveCommentResponse {
    return SaveCommentResponseToJSONTyped(json, false);
}

export function SaveCommentResponseToJSONTyped(value?: SaveCommentResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': ImportedAPIStatusSUCCESSToJSON(value['status']),
        'comment': FCommentToJSON(value['comment']),
        'user': UserSessionInfoToJSON(value['user']),
        'moduleData': value['moduleData'],
    };
}

