/* tslint:disable */
/* eslint-disable */
/**
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EventLogEntry
 */
export interface EventLogEntry {
    /**
     * 
     * @type {string}
     * @memberof EventLogEntry
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof EventLogEntry
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof EventLogEntry
     */
    tenantId: string;
    /**
     * 
     * @type {string}
     * @memberof EventLogEntry
     */
    urlId: string;
    /**
     * 
     * @type {string}
     * @memberof EventLogEntry
     */
    broadcastId: string;
    /**
     * 
     * @type {string}
     * @memberof EventLogEntry
     */
    data: string;
}

/**
 * Check if a given object implements the EventLogEntry interface.
 */
export function instanceOfEventLogEntry(value: object): value is EventLogEntry {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('urlId' in value) || value['urlId'] === undefined) return false;
    if (!('broadcastId' in value) || value['broadcastId'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function EventLogEntryFromJSON(json: any): EventLogEntry {
    return EventLogEntryFromJSONTyped(json, false);
}

export function EventLogEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventLogEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'createdAt': (new Date(json['createdAt'])),
        'tenantId': json['tenantId'],
        'urlId': json['urlId'],
        'broadcastId': json['broadcastId'],
        'data': json['data'],
    };
}

export function EventLogEntryToJSON(json: any): EventLogEntry {
    return EventLogEntryToJSONTyped(json, false);
}

export function EventLogEntryToJSONTyped(value?: EventLogEntry | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'createdAt': ((value['createdAt']).toISOString()),
        'tenantId': value['tenantId'],
        'urlId': value['urlId'],
        'broadcastId': value['broadcastId'],
        'data': value['data'],
    };
}

