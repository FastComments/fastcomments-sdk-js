{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"APIStatus": {
				"enum": [
					"success",
					"failed"
				],
				"type": "string"
			},
			"UserSearchResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"avatarSrc": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"enum": [
							"user",
							"sso"
						]
					}
				},
				"required": [
					"id",
					"name",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ImportedAPIStatus.SUCCESS": {
				"enum": [
					"success"
				],
				"type": "string"
			},
			"SearchUsersResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"users": {
						"items": {
							"$ref": "#/components/schemas/UserSearchResult"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"users"
				],
				"type": "object"
			},
			"ImportedAPIStatus.FAILED": {
				"enum": [
					"failed"
				],
				"type": "string"
			},
			"CommentHTMLRenderingMode": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"CommentThreadDeletionMode": {
				"enum": [
					0,
					1,
					2,
					3
				],
				"type": "number"
			},
			"CommenterNameFormats": {
				"enum": [
					0,
					1,
					2,
					3,
					4
				],
				"type": "number"
			},
			"SortDirections": {
				"enum": [
					"OF",
					"NF",
					"MR"
				],
				"type": "string"
			},
			"GifRating": {
				"enum": [
					"g",
					"pg",
					"pg-13",
					"r"
				],
				"type": "string"
			},
			"ImageContentProfanityLevel": {
				"enum": [
					"off",
					"low",
					"medium",
					"high"
				],
				"type": "string"
			},
			"SpamRule": {
				"properties": {
					"actions": {
						"items": {
							"type": "string",
							"enum": [
								"spam",
								"not-spam",
								"ignore-repeat"
							]
						},
						"type": "array"
					},
					"commentContains": {
						"type": "string"
					}
				},
				"required": [
					"actions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SSOSecurityLevel": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"Record_string.string_": {
				"properties": {},
				"additionalProperties": {
					"type": "string"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"VoteStyle": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"CommentQuestionResultsRenderingType": {
				"enum": [
					0,
					1,
					2
				],
				"type": "number"
			},
			"QuestionRenderingType": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"QuestionWhenSave": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"CommentQuestionsRequired": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"QuestionSubQuestionVisibility": {
				"enum": [
					0,
					1
				],
				"type": "number"
			},
			"CustomConfigParameters": {
				"properties": {
					"absoluteAndRelativeDates": {
						"type": "boolean"
					},
					"absoluteDates": {
						"type": "boolean"
					},
					"allowAnon": {
						"type": "boolean"
					},
					"allowAnonFlag": {
						"type": "boolean"
					},
					"allowAnonVotes": {
						"type": "boolean"
					},
					"allowedLanguages": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"collapseReplies": {
						"type": "boolean"
					},
					"commentCountFormat": {
						"type": "string",
						"nullable": true
					},
					"commentHTMLRenderingMode": {
						"$ref": "#/components/schemas/CommentHTMLRenderingMode"
					},
					"commentThreadDeleteMode": {
						"allOf": [
							{
								"$ref": "#/components/schemas/CommentThreadDeletionMode"
							}
						],
						"nullable": true
					},
					"commenterNameFormat": {
						"allOf": [
							{
								"$ref": "#/components/schemas/CommenterNameFormats"
							}
						],
						"nullable": true
					},
					"countAboveToggle": {
						"type": "integer",
						"format": "int32"
					},
					"customCSS": {
						"type": "string",
						"nullable": true
					},
					"defaultAvatarSrc": {
						"type": "string",
						"nullable": true
					},
					"defaultSortDirection": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SortDirections"
							}
						],
						"nullable": true
					},
					"defaultUsername": {
						"type": "string",
						"nullable": true
					},
					"disableAutoAdminMigration": {
						"type": "boolean"
					},
					"disableAutoHashTagCreation": {
						"type": "boolean"
					},
					"disableBlocking": {
						"type": "boolean"
					},
					"disableCommenterCommentDelete": {
						"type": "boolean"
					},
					"disableCommenterCommentEdit": {
						"type": "boolean"
					},
					"disableEmailInputs": {
						"type": "boolean"
					},
					"disableLiveCommenting": {
						"type": "boolean"
					},
					"disableNotificationBell": {
						"type": "boolean"
					},
					"disableProfiles": {
						"type": "boolean"
					},
					"disableSuccessMessage": {
						"type": "boolean"
					},
					"disableToolbar": {
						"type": "boolean"
					},
					"disableUnverifiedLabel": {
						"type": "boolean"
					},
					"disableVoting": {
						"type": "boolean"
					},
					"enableCommenterLinks": {
						"type": "boolean"
					},
					"enableSearch": {
						"type": "boolean"
					},
					"enableSpoilers": {
						"type": "boolean"
					},
					"enableThirdPartyCookieBypass": {
						"type": "boolean"
					},
					"enableViewCounts": {
						"type": "boolean"
					},
					"enableVoteList": {
						"type": "boolean"
					},
					"enableWYSIWYG": {
						"type": "boolean"
					},
					"gifRating": {
						"$ref": "#/components/schemas/GifRating"
					},
					"hasDarkBackground": {
						"type": "boolean"
					},
					"headerHTML": {
						"type": "string",
						"nullable": true
					},
					"hideAvatars": {
						"type": "boolean"
					},
					"hideCommentsUnderCountTextFormat": {
						"type": "string",
						"nullable": true
					},
					"imageContentProfanityLevel": {
						"$ref": "#/components/schemas/ImageContentProfanityLevel"
					},
					"inputAfterComments": {
						"type": "boolean"
					},
					"limitCommentsByGroups": {
						"type": "boolean"
					},
					"locale": {
						"type": "string",
						"nullable": true
					},
					"maxCommentCharacterLength": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"maxCommentCreatedCountPUPM": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"noCustomConfig": {
						"type": "boolean"
					},
					"noImageUploads": {
						"type": "boolean"
					},
					"noStyles": {
						"type": "boolean"
					},
					"pageSize": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"readonly": {
						"type": "boolean"
					},
					"requireSSO": {
						"type": "boolean"
					},
					"enableResizeHandle": {
						"type": "boolean"
					},
					"restrictedLinkDomains": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"showBadgesInTopBar": {
						"type": "boolean"
					},
					"showCommentSaveSuccess": {
						"type": "boolean"
					},
					"showLiveRightAway": {
						"type": "boolean"
					},
					"showQuestion": {
						"type": "boolean"
					},
					"spamRules": {
						"items": {
							"$ref": "#/components/schemas/SpamRule"
						},
						"type": "array"
					},
					"ssoSecLvl": {
						"$ref": "#/components/schemas/SSOSecurityLevel"
					},
					"translations": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						],
						"nullable": true
					},
					"useShowCommentsToggle": {
						"type": "boolean"
					},
					"useSingleLineCommentInput": {
						"type": "boolean"
					},
					"voteStyle": {
						"$ref": "#/components/schemas/VoteStyle"
					},
					"widgetQuestionId": {
						"type": "string"
					},
					"widgetQuestionResultsStyle": {
						"$ref": "#/components/schemas/CommentQuestionResultsRenderingType"
					},
					"widgetQuestionStyle": {
						"$ref": "#/components/schemas/QuestionRenderingType"
					},
					"widgetQuestionWhenToSave": {
						"$ref": "#/components/schemas/QuestionWhenSave"
					},
					"widgetQuestionsRequired": {
						"$ref": "#/components/schemas/CommentQuestionsRequired"
					},
					"widgetSubQuestionVisibility": {
						"$ref": "#/components/schemas/QuestionSubQuestionVisibility"
					},
					"wrap": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"APIError": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.FAILED"
					},
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"secondaryCode": {
						"type": "string"
					},
					"bannedUntil": {
						"type": "integer",
						"format": "int64"
					},
					"maxCharacterLength": {
						"type": "integer",
						"format": "int32"
					},
					"translatedError": {
						"type": "string"
					},
					"customConfig": {
						"$ref": "#/components/schemas/CustomConfigParameters"
					}
				},
				"required": [
					"status",
					"reason",
					"code"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.boolean_": {
				"properties": {},
				"additionalProperties": {
					"type": "boolean"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"GetUserPresenceStatusesResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"userIdsOnline": {
						"$ref": "#/components/schemas/Record_string.boolean_"
					}
				},
				"required": [
					"status",
					"userIdsOnline"
				],
				"type": "object"
			},
			"NotificationObjectType": {
				"enum": [
					0,
					1,
					2
				],
				"type": "number"
			},
			"NotificationType": {
				"enum": [
					0,
					1,
					2,
					3,
					4,
					5,
					6,
					7,
					8,
					81,
					82,
					9,
					10
				],
				"type": "number"
			},
			"RenderableUserNotification": {
				"properties": {
					"conversationId": {
						"type": "string"
					},
					"contextHTML": {
						"type": "string"
					},
					"fromUserNames": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"fromUserIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"relatedIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"count": {
						"type": "integer",
						"format": "int64"
					},
					"optedOut": {
						"type": "boolean"
					},
					"fromUserAvatarSrc": {
						"type": "string",
						"nullable": true
					},
					"fromUserId": {
						"type": "string",
						"nullable": true
					},
					"fromUserName": {
						"type": "string",
						"nullable": true
					},
					"fromCommentId": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"$ref": "#/components/schemas/NotificationType"
					},
					"createdAt": {
						"type": "string"
					},
					"sent": {
						"type": "string"
					},
					"viewed": {
						"type": "string"
					},
					"relatedObjectId": {
						"type": "string"
					},
					"relatedObjectType": {
						"$ref": "#/components/schemas/NotificationObjectType"
					},
					"pageTitle": {
						"type": "string",
						"nullable": true
					},
					"url": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"optedOut",
					"type",
					"createdAt",
					"sent",
					"viewed",
					"relatedObjectId",
					"relatedObjectType",
					"url",
					"urlId",
					"_id"
				],
				"type": "object"
			},
			"GetMyNotificationsResponse": {
				"properties": {
					"translations": {
						"$ref": "#/components/schemas/Record_string.string_"
					},
					"isSubscribed": {
						"type": "boolean"
					},
					"hasMore": {
						"type": "boolean"
					},
					"notifications": {
						"items": {
							"$ref": "#/components/schemas/RenderableUserNotification"
						},
						"type": "array"
					},
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					}
				},
				"required": [
					"isSubscribed",
					"hasMore",
					"notifications",
					"status"
				],
				"type": "object"
			},
			"ResetUserNotificationsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"code": {
						"type": "string",
						"enum": [
							"ignored-since-impersonated"
						],
						"nullable": false
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetUserNotificationCountResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"count": {
						"type": "integer",
						"format": "int64"
					}
				},
				"required": [
					"status",
					"count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EnumAsObject_typeofNotificationType_": {
				"properties": {},
				"type": "object"
			},
			"NotificationAndCount": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/NotificationType"
					},
					"count": {
						"type": "integer",
						"format": "int64"
					}
				},
				"required": [
					"type",
					"count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HeaderState": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"NotificationType": {
						"$ref": "#/components/schemas/EnumAsObject_typeofNotificationType_"
					},
					"userId": {
						"type": "string"
					},
					"userIdWS": {
						"type": "string"
					},
					"notificationCounts": {
						"items": {
							"$ref": "#/components/schemas/NotificationAndCount"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"NotificationType",
					"userId",
					"userIdWS",
					"notificationCounts"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserNotificationWriteResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"matchedCount": {
						"type": "integer",
						"format": "int64"
					},
					"modifiedCount": {
						"type": "integer",
						"format": "int64"
					}
				},
				"required": [
					"status",
					"matchedCount",
					"modifiedCount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IgnoredResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"note": {
						"type": "string",
						"enum": [
							"ignored-since-impersonated",
							"demo-noop"
						]
					}
				},
				"required": [
					"status",
					"note"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MediaAsset": {
				"properties": {
					"w": {
						"type": "integer",
						"format": "int32"
					},
					"h": {
						"type": "integer",
						"format": "int32"
					},
					"src": {
						"type": "string"
					}
				},
				"required": [
					"w",
					"h",
					"src"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UploadImageResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"url": {
						"type": "string"
					},
					"media": {
						"items": {
							"$ref": "#/components/schemas/MediaAsset"
						},
						"type": "array"
					},
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SizePreset": {
				"type": "string",
				"enum": [
					"Default",
					"CrossPlatform"
				]
			},
			"APIEmptyResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"FeedPostMediaItemAsset": {
				"properties": {
					"w": {
						"type": "integer",
						"format": "int32"
					},
					"h": {
						"type": "integer",
						"format": "int32"
					},
					"src": {
						"type": "string"
					}
				},
				"required": [
					"w",
					"h",
					"src"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedPostMediaItem": {
				"properties": {
					"title": {
						"type": "string"
					},
					"linkUrl": {
						"type": "string"
					},
					"sizes": {
						"items": {
							"$ref": "#/components/schemas/FeedPostMediaItemAsset"
						},
						"type": "array"
					}
				},
				"required": [
					"sizes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedPostLink": {
				"properties": {
					"text": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Int32Map": {
				"properties": {},
				"additionalProperties": {
					"type": "integer",
					"format": "int32"
				},
				"type": "object"
			},
			"FeedPost": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"tenantId": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"fromUserId": {
						"type": "string"
					},
					"fromUserDisplayName": {
						"type": "string",
						"nullable": true
					},
					"fromUserAvatar": {
						"type": "string",
						"nullable": true
					},
					"fromIpHash": {
						"type": "string"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"weight": {
						"type": "number",
						"format": "double"
					},
					"meta": {
						"$ref": "#/components/schemas/Record_string.string_"
					},
					"contentHTML": {
						"type": "string"
					},
					"media": {
						"items": {
							"$ref": "#/components/schemas/FeedPostMediaItem"
						},
						"type": "array"
					},
					"links": {
						"items": {
							"$ref": "#/components/schemas/FeedPostLink"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"reacts": {
						"$ref": "#/components/schemas/Int32Map"
					},
					"commentCount": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					}
				},
				"required": [
					"_id",
					"tenantId",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CommentUserBadgeInfo": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "integer",
						"format": "int32"
					},
					"description": {
						"type": "string"
					},
					"displayLabel": {
						"type": "string",
						"nullable": true
					},
					"displaySrc": {
						"type": "string",
						"nullable": true
					},
					"backgroundColor": {
						"type": "string",
						"nullable": true
					},
					"borderColor": {
						"type": "string",
						"nullable": true
					},
					"textColor": {
						"type": "string",
						"nullable": true
					},
					"cssClass": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"id",
					"type",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserSessionInfo": {
				"properties": {
					"id": {
						"type": "string"
					},
					"authorized": {
						"type": "boolean"
					},
					"avatarSrc": {
						"type": "string",
						"nullable": true
					},
					"badges": {
						"items": {
							"$ref": "#/components/schemas/CommentUserBadgeInfo"
						},
						"type": "array"
					},
					"displayLabel": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"email": {
						"type": "string",
						"nullable": true
					},
					"groupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"hasBlockedUsers": {
						"type": "boolean"
					},
					"isAnonSession": {
						"type": "boolean"
					},
					"sessionId": {
						"type": "string",
						"nullable": true
					},
					"username": {
						"type": "string"
					},
					"websiteUrl": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GetPublicFeedPostsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"feedPosts": {
						"items": {
							"$ref": "#/components/schemas/FeedPost"
						},
						"type": "array"
					},
					"user": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UserSessionInfo"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"status",
					"feedPosts"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TenantIdWS": {
				"type": "string"
			},
			"UserIdWS": {
				"type": "string"
			},
			"UrlIdWS": {
				"type": "string"
			},
			"UserPresenceData": {
				"properties": {
					"urlIdWS": {
						"$ref": "#/components/schemas/UrlIdWS"
					},
					"userIdWS": {
						"$ref": "#/components/schemas/UserIdWS"
					},
					"tenantIdWS": {
						"$ref": "#/components/schemas/TenantIdWS"
					}
				},
				"type": "object"
			},
			"PublicFeedPostsResponse": {
				"allOf": [
					{
						"properties": {
							"myReacts": {
								"properties": {},
								"additionalProperties": {
									"properties": {},
									"additionalProperties": {
										"type": "boolean"
									},
									"type": "object"
								},
								"type": "object"
							}
						},
						"type": "object"
					},
					{
						"$ref": "#/components/schemas/GetPublicFeedPostsResponse"
					},
					{
						"$ref": "#/components/schemas/UserPresenceData"
					}
				]
			},
			"ReactFeedPostResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"reactType": {
						"type": "string"
					},
					"isUndo": {
						"type": "boolean"
					}
				},
				"required": [
					"status",
					"reactType",
					"isUndo"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ReactBodyParams": {
				"properties": {
					"reactType": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"UserReactsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"reacts": {
						"properties": {},
						"additionalProperties": {
							"properties": {},
							"additionalProperties": {
								"type": "boolean"
							},
							"type": "object"
						},
						"type": "object"
					}
				},
				"required": [
					"status",
					"reacts"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateFeedPostResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"feedPost": {
						"$ref": "#/components/schemas/FeedPost"
					}
				},
				"required": [
					"status",
					"feedPost"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateFeedPostParams": {
				"properties": {
					"title": {
						"type": "string"
					},
					"contentHTML": {
						"type": "string"
					},
					"media": {
						"items": {
							"$ref": "#/components/schemas/FeedPostMediaItem"
						},
						"type": "array"
					},
					"links": {
						"items": {
							"$ref": "#/components/schemas/FeedPostLink"
						},
						"type": "array"
					},
					"fromUserId": {
						"type": "string"
					},
					"fromUserDisplayName": {
						"type": "string"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"meta": {
						"$ref": "#/components/schemas/Record_string.string_"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"UpdateFeedPostParams": {
				"properties": {
					"title": {
						"type": "string"
					},
					"contentHTML": {
						"type": "string"
					},
					"media": {
						"items": {
							"$ref": "#/components/schemas/FeedPostMediaItem"
						},
						"type": "array"
					},
					"links": {
						"items": {
							"$ref": "#/components/schemas/FeedPostLink"
						},
						"type": "array"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"meta": {
						"$ref": "#/components/schemas/Record_string.string_"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"FeedPostStats": {
				"properties": {
					"reacts": {
						"$ref": "#/components/schemas/Int32Map"
					},
					"commentCount": {
						"type": "integer",
						"format": "int32"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"FeedPostsStatsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"stats": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/FeedPostStats"
						},
						"type": "object"
					}
				},
				"required": [
					"status",
					"stats"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EventLogEntry": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"tenantId": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"broadcastId": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"_id",
					"createdAt",
					"tenantId",
					"urlId",
					"broadcastId",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetEventLogResponse": {
				"properties": {
					"events": {
						"items": {
							"$ref": "#/components/schemas/EventLogEntry"
						},
						"type": "array"
					},
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					}
				},
				"required": [
					"events",
					"status"
				],
				"type": "object"
			},
			"LiveEventType": {
				"enum": [
					"update-badges",
					"notification",
					"notification-update",
					"p-u",
					"new-vote",
					"deleted-vote",
					"new-comment",
					"updated-comment",
					"deleted-comment",
					"cvc",
					"new-config",
					"thread-state-change",
					"fr",
					"dfr",
					"new-feed-post",
					"updated-feed-post",
					"deleted-feed-post"
				],
				"type": "string"
			},
			"TenantId": {
				"type": "string"
			},
			"UserNotification": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"tenantId": {
						"$ref": "#/components/schemas/TenantId"
					},
					"userId": {
						"type": "string",
						"nullable": true
					},
					"anonUserId": {
						"type": "string",
						"nullable": true
					},
					"urlId": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"pageTitle": {
						"type": "string",
						"nullable": true
					},
					"relatedObjectType": {
						"$ref": "#/components/schemas/NotificationObjectType"
					},
					"relatedObjectId": {
						"type": "string"
					},
					"viewed": {
						"type": "boolean"
					},
					"isUnreadMessage": {
						"type": "boolean"
					},
					"sent": {
						"type": "boolean"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"type": {
						"$ref": "#/components/schemas/NotificationType"
					},
					"fromCommentId": {
						"type": "string",
						"nullable": true
					},
					"fromVoteId": {
						"type": "string",
						"nullable": true
					},
					"fromUserName": {
						"type": "string",
						"nullable": true
					},
					"fromUserId": {
						"type": "string",
						"nullable": true
					},
					"fromUserAvatarSrc": {
						"type": "string",
						"nullable": true
					},
					"optedOut": {
						"type": "boolean"
					},
					"count": {
						"type": "integer",
						"format": "int64"
					},
					"relatedIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"fromUserIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"fromUserNames": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"_id",
					"tenantId",
					"urlId",
					"url",
					"relatedObjectType",
					"relatedObjectId",
					"viewed",
					"isUnreadMessage",
					"sent",
					"createdAt",
					"type",
					"optedOut"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PubSubVote": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"tenantId": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"urlIdRaw": {
						"type": "string"
					},
					"commentId": {
						"type": "string"
					},
					"userId": {
						"type": "string",
						"nullable": true
					},
					"direction": {
						"type": "integer",
						"format": "int32"
					},
					"createdAt": {
						"type": "integer",
						"format": "int64"
					},
					"verificationId": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"_id",
					"tenantId",
					"urlId",
					"urlIdRaw",
					"commentId",
					"direction",
					"createdAt",
					"verificationId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Omit_FComment.date_.PublicCommentPubSubFieldsKeys_": {
				"properties": {
					"date": {},
					"_id": {
						"type": "string"
					},
					"tenantId": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"pageTitle": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"anonUserId": {
						"type": "string"
					},
					"commenterName": {
						"type": "string"
					},
					"commenterLink": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"commentHTML": {
						"type": "string"
					},
					"parentId": {
						"type": "string"
					},
					"votes": {
						"type": "integer",
						"format": "int32"
					},
					"votesUp": {
						"type": "integer",
						"format": "int32"
					},
					"votesDown": {
						"type": "integer",
						"format": "int32"
					},
					"expireAt": {
						"type": "string",
						"format": "date-time"
					},
					"verified": {
						"type": "boolean"
					},
					"reviewed": {
						"type": "boolean"
					},
					"avatarSrc": {
						"type": "string"
					},
					"isSpam": {
						"type": "boolean"
					},
					"hasImages": {
						"type": "boolean"
					},
					"hasLinks": {
						"type": "boolean"
					},
					"hasCode": {
						"type": "boolean"
					},
					"approved": {
						"type": "boolean"
					},
					"locale": {
						"type": "string"
					},
					"isDeleted": {
						"type": "boolean"
					},
					"isDeletedUser": {
						"type": "boolean"
					},
					"isBannedUser": {
						"type": "boolean"
					},
					"isByAdmin": {
						"type": "boolean"
					},
					"isByModerator": {
						"type": "boolean"
					},
					"isPinned": {
						"type": "boolean"
					},
					"isLocked": {
						"type": "boolean"
					},
					"flagCount": {
						"type": "integer",
						"format": "int32"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"displayLabel": {
						"type": "string"
					},
					"badges": {
						"items": {
							"$ref": "#/components/schemas/CommentUserBadgeInfo"
						},
						"type": "array"
					},
					"domain": {
						"type": "string"
					},
					"feedbackIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"groupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"viewCount": {
						"type": "integer",
						"format": "int64"
					}
				},
				"required": [
					"date",
					"_id",
					"tenantId",
					"urlId",
					"url",
					"commenterName",
					"comment",
					"commentHTML",
					"verified",
					"approved",
					"locale"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"PubSubComment": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Pick_Omit_FComment.date_.PublicCommentPubSubFieldsKeys_"
					},
					{
						"properties": {
							"isLive": {
								"type": "boolean"
							},
							"hidden": {
								"type": "boolean"
							},
							"date": {
								"type": "string"
							}
						},
						"required": [
							"date"
						],
						"type": "object"
					}
				]
			},
			"Record_string._before-string-or-null--after-string-or-null__": {
				"properties": {},
				"additionalProperties": {
					"properties": {
						"after": {
							"type": "string"
						},
						"before": {
							"type": "string"
						}
					},
					"required": [
						"after",
						"before"
					],
					"type": "object"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"CommentPositions": {
				"$ref": "#/components/schemas/Record_string._before-string-or-null--after-string-or-null__"
			},
			"LiveEvent": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/LiveEventType"
					},
					"timestamp": {
						"type": "integer",
						"format": "int64"
					},
					"ts": {
						"type": "integer",
						"format": "int64"
					},
					"broadcastId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"badges": {
						"items": {
							"$ref": "#/components/schemas/CommentUserBadgeInfo"
						},
						"type": "array"
					},
					"notification": {
						"$ref": "#/components/schemas/UserNotification"
					},
					"vote": {
						"$ref": "#/components/schemas/PubSubVote"
					},
					"comment": {
						"$ref": "#/components/schemas/PubSubComment"
					},
					"feedPost": {
						"$ref": "#/components/schemas/FeedPost"
					},
					"extraInfo": {
						"properties": {
							"commentPositions": {
								"$ref": "#/components/schemas/CommentPositions"
							}
						},
						"type": "object"
					},
					"config": {
						"additionalProperties": false,
						"type": "object"
					},
					"isClosed": {
						"type": "boolean"
					},
					"uj": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"ul": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"changes": {
						"$ref": "#/components/schemas/Int32Map"
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PublicAPIGetCommentTextResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"commentText": {
						"type": "string"
					},
					"sanitizedCommentText": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"commentText",
					"sanitizedCommentText"
				],
				"type": "object"
			},
			"Pick_FComment.approved-or-commentHTML_": {
				"properties": {
					"commentHTML": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					}
				},
				"required": [
					"commentHTML",
					"approved"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"PublicAPISetCommentTextResponse": {
				"properties": {
					"comment": {
						"$ref": "#/components/schemas/Pick_FComment.approved-or-commentHTML_"
					},
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					}
				},
				"required": [
					"comment",
					"status"
				],
				"type": "object"
			},
			"CommentUserMentionInfo": {
				"properties": {
					"id": {
						"type": "string"
					},
					"tag": {
						"type": "string"
					},
					"rawTag": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"user",
							"sso"
						]
					},
					"sent": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"tag"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CommentUserHashTagInfo": {
				"properties": {
					"id": {
						"type": "string"
					},
					"tag": {
						"type": "string"
					},
					"url": {
						"type": "string",
						"nullable": true
					},
					"retain": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"tag",
					"url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CommentTextUpdateRequest": {
				"properties": {
					"comment": {
						"type": "string"
					},
					"mentions": {
						"items": {
							"$ref": "#/components/schemas/CommentUserMentionInfo"
						},
						"type": "array"
					},
					"hashTags": {
						"items": {
							"$ref": "#/components/schemas/CommentUserHashTagInfo"
						},
						"type": "array"
					}
				},
				"required": [
					"comment"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PublicComment": {
				"allOf": [
					{
						"properties": {
							"isUnread": {
								"type": "boolean"
							},
							"myVoteId": {
								"type": "string"
							},
							"isVotedDown": {
								"type": "boolean"
							},
							"isVotedUp": {
								"type": "boolean"
							},
							"hasChildren": {
								"type": "boolean",
								"description": "This is always set when asTree=true"
							},
							"nestedChildrenCount": {
								"type": "integer",
								"format": "int32",
								"description": "The total nested child count included in this response (may be more available w/ pagination) Only set with asTree=true, otherwise this will be null."
							},
							"childCount": {
								"type": "integer",
								"format": "int32",
								"description": "You must ask the API to count children (with asTree=true&countChildren=true), otherwise this will be null. This will be the complete direct child count, whereas children may only contain a subset based on pagination."
							},
							"children": {
								"items": {
									"$ref": "#/components/schemas/PublicComment"
								},
								"type": "array"
							},
							"isFlagged": {
								"type": "boolean"
							},
							"isBlocked": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					{
						"$ref": "#/components/schemas/Pick_FComment.PublicCommentFieldsKeys_"
					}
				]
			},
			"Pick_FComment.PublicCommentFieldsKeys_": {
				"properties": {
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"_id": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"anonUserId": {
						"type": "string"
					},
					"commenterName": {
						"type": "string"
					},
					"commenterLink": {
						"type": "string"
					},
					"commentHTML": {
						"type": "string"
					},
					"parentId": {
						"type": "string"
					},
					"votes": {
						"type": "integer",
						"format": "int32"
					},
					"votesUp": {
						"type": "integer",
						"format": "int32"
					},
					"votesDown": {
						"type": "integer",
						"format": "int32"
					},
					"verified": {
						"type": "boolean"
					},
					"avatarSrc": {
						"type": "string"
					},
					"isSpam": {
						"type": "boolean"
					},
					"hasImages": {
						"type": "boolean"
					},
					"isDeleted": {
						"type": "boolean"
					},
					"isDeletedUser": {
						"type": "boolean"
					},
					"isByAdmin": {
						"type": "boolean"
					},
					"isByModerator": {
						"type": "boolean"
					},
					"isPinned": {
						"type": "boolean"
					},
					"isLocked": {
						"type": "boolean"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"displayLabel": {
						"type": "string"
					},
					"badges": {
						"items": {
							"$ref": "#/components/schemas/CommentUserBadgeInfo"
						},
						"type": "array"
					},
					"feedbackIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"viewCount": {
						"type": "integer",
						"format": "int64"
					},
					"requiresVerification": {
						"type": "boolean"
					},
					"editKey": {
						"type": "string"
					}
				},
				"required": [
					"date",
					"_id",
					"commenterName",
					"commentHTML",
					"verified"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Record_string.any_": {
				"properties": {},
				"additionalProperties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"GetCommentsResponse_PublicComment_": {
				"properties": {
					"statusCode": {
						"type": "integer",
						"format": "int32"
					},
					"status": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"reason": {
						"type": "string"
					},
					"translatedWarning": {
						"type": "string"
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/PublicComment"
						},
						"type": "array"
					},
					"user": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UserSessionInfo"
							}
						],
						"nullable": true
					},
					"urlIdClean": {
						"type": "string"
					},
					"lastGenDate": {
						"type": "integer",
						"format": "int64",
						"nullable": true
					},
					"includesPastPages": {
						"type": "boolean"
					},
					"isDemo": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"commentCount": {
						"type": "integer",
						"format": "int32"
					},
					"isSiteAdmin": {
						"type": "boolean"
					},
					"hasBillingIssue": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"moduleData": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"pageNumber": {
						"type": "integer",
						"format": "int32"
					},
					"isWhiteLabeled": {
						"type": "boolean"
					},
					"isProd": {
						"type": "boolean",
						"enum": [
							false
						],
						"nullable": false
					},
					"isCrawler": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"notificationCount": {
						"type": "integer",
						"format": "int32"
					},
					"hasMore": {
						"type": "boolean"
					},
					"isClosed": {
						"type": "boolean"
					},
					"presencePollState": {
						"type": "integer",
						"format": "int32"
					},
					"customConfig": {
						"$ref": "#/components/schemas/CustomConfigParameters"
					}
				},
				"required": [
					"status",
					"comments",
					"user",
					"pageNumber"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetCommentsResponseWithPresence_PublicComment_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GetCommentsResponse_PublicComment_"
					},
					{
						"$ref": "#/components/schemas/UserPresenceData"
					}
				]
			},
			"SaveCommentResponseOptimized": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"comment": {
						"$ref": "#/components/schemas/PublicComment"
					},
					"user": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UserSessionInfo"
							}
						],
						"nullable": true
					},
					"moduleData": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"status",
					"comment",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SaveCommentsResponseWithPresence": {
				"allOf": [
					{
						"$ref": "#/components/schemas/SaveCommentResponseOptimized"
					},
					{
						"properties": {
							"userIdWS": {
								"$ref": "#/components/schemas/UserIdWS"
							}
						},
						"type": "object"
					}
				]
			},
			"Record_string.string-or-number_": {
				"properties": {},
				"additionalProperties": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "number",
							"format": "double"
						}
					]
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"CommentData": {
				"properties": {
					"date": {
						"type": "integer",
						"format": "int64"
					},
					"localDateString": {
						"type": "string"
					},
					"localDateHours": {
						"type": "integer",
						"format": "int32"
					},
					"commenterName": {
						"type": "string"
					},
					"commenterEmail": {
						"type": "string",
						"nullable": true
					},
					"commenterLink": {
						"type": "string",
						"nullable": true
					},
					"comment": {
						"type": "string"
					},
					"productId": {
						"type": "integer",
						"format": "int32"
					},
					"userId": {
						"type": "string",
						"nullable": true
					},
					"avatarSrc": {
						"type": "string",
						"nullable": true
					},
					"parentId": {
						"type": "string",
						"nullable": true
					},
					"mentions": {
						"items": {
							"$ref": "#/components/schemas/CommentUserMentionInfo"
						},
						"type": "array"
					},
					"hashTags": {
						"items": {
							"$ref": "#/components/schemas/CommentUserHashTagInfo"
						},
						"type": "array"
					},
					"pageTitle": {
						"type": "string"
					},
					"isFromMyAccountPage": {
						"type": "boolean"
					},
					"url": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"meta": {
						"additionalProperties": false,
						"type": "object"
					},
					"moderationGroupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"fromOfflineRestore": {
						"type": "boolean"
					},
					"autoplayDelayMS": {
						"type": "integer",
						"format": "int64"
					},
					"feedbackIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"questionValues": {
						"$ref": "#/components/schemas/Record_string.string-or-number_"
					}
				},
				"required": [
					"commenterName",
					"comment",
					"url",
					"urlId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_FComment.isDeleted-or-commentHTML-or-commenterName-or-userId_": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"commenterName": {
						"type": "string"
					},
					"commentHTML": {
						"type": "string"
					},
					"isDeleted": {
						"type": "boolean"
					}
				},
				"required": [
					"commenterName",
					"commentHTML"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"PublicAPIDeleteCommentResponse": {
				"properties": {
					"comment": {
						"$ref": "#/components/schemas/Pick_FComment.isDeleted-or-commentHTML-or-commenterName-or-userId_"
					},
					"hardRemoved": {
						"type": "boolean"
					},
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					}
				},
				"required": [
					"hardRemoved",
					"status"
				],
				"type": "object"
			},
			"CheckBlockedCommentsResponse": {
				"properties": {
					"commentStatuses": {
						"$ref": "#/components/schemas/Record_string.boolean_"
					},
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					}
				},
				"required": [
					"commentStatuses",
					"status"
				],
				"type": "object"
			},
			"VoteResponseUser": {
				"properties": {
					"sessionId": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"VoteResponse": {
				"properties": {
					"status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
							},
							{
								"$ref": "#/components/schemas/ImportedAPIStatus.FAILED"
							},
							{
								"type": "string",
								"enum": [
									"pending-verification"
								]
							}
						]
					},
					"voteId": {
						"type": "string"
					},
					"isVerified": {
						"type": "boolean"
					},
					"user": {
						"$ref": "#/components/schemas/VoteResponseUser"
					},
					"editKey": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VoteBodyParams": {
				"properties": {
					"commenterEmail": {
						"type": "string",
						"nullable": true
					},
					"commenterName": {
						"type": "string",
						"nullable": true
					},
					"voteDir": {
						"type": "string",
						"enum": [
							"up",
							"down"
						]
					},
					"url": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"commenterEmail",
					"commenterName",
					"voteDir",
					"url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VoteDeleteResponse": {
				"properties": {
					"status": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
							},
							{
								"$ref": "#/components/schemas/ImportedAPIStatus.FAILED"
							}
						]
					},
					"wasPendingVote": {
						"type": "boolean"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetCommentVoteUserNamesSuccessResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"voteUserNames": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"hasMore": {
						"type": "boolean"
					}
				},
				"required": [
					"status",
					"voteUserNames",
					"hasMore"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChangeCommentPinStatusResponse": {
				"properties": {
					"commentPositions": {
						"$ref": "#/components/schemas/CommentPositions"
					},
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					}
				},
				"required": [
					"commentPositions",
					"status"
				],
				"type": "object"
			},
			"BlockSuccess": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"commentStatuses": {
						"$ref": "#/components/schemas/Record_string.boolean_"
					}
				},
				"required": [
					"status",
					"commentStatuses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PublicBlockFromCommentParams": {
				"properties": {
					"commentIds": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true,
						"description": "A list of comment ids to check if are blocked after performing the update."
					}
				},
				"required": [
					"commentIds"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UnblockSuccess": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"commentStatuses": {
						"$ref": "#/components/schemas/Record_string.boolean_"
					}
				},
				"required": [
					"status",
					"commentStatuses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"APIUserSubscription": {
				"properties": {
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"pageTitle": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"anonUserId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"createdAt",
					"urlId",
					"id"
				],
				"type": "object"
			},
			"GetSubscriptionsAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"subscriptions": {
						"items": {
							"$ref": "#/components/schemas/APIUserSubscription"
						},
						"type": "array"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"CreateSubscriptionAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"subscription": {
						"$ref": "#/components/schemas/APIUserSubscription"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"CreateAPIUserSubscriptionData": {
				"properties": {
					"pageTitle": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"anonUserId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					}
				},
				"required": [
					"urlId"
				],
				"type": "object"
			},
			"DeleteSubscriptionAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"APISSOUser": {
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"websiteUrl": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"signUpDate": {
						"type": "integer",
						"format": "int64"
					},
					"createdFromUrlId": {
						"type": "string"
					},
					"loginCount": {
						"type": "integer",
						"format": "int32"
					},
					"avatarSrc": {
						"type": "string"
					},
					"optedInNotifications": {
						"type": "boolean"
					},
					"optedInSubscriptionNotifications": {
						"type": "boolean"
					},
					"displayLabel": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"isAccountOwner": {
						"type": "boolean"
					},
					"isAdminAdmin": {
						"type": "boolean"
					},
					"isCommentModeratorAdmin": {
						"type": "boolean"
					},
					"isProfileActivityPrivate": {
						"type": "boolean"
					},
					"isProfileCommentsPrivate": {
						"type": "boolean"
					},
					"isProfileDMDisabled": {
						"type": "boolean"
					},
					"hasBlockedUsers": {
						"type": "boolean"
					},
					"groupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"username",
					"websiteUrl",
					"email",
					"signUpDate",
					"createdFromUrlId",
					"loginCount",
					"avatarSrc",
					"optedInNotifications",
					"optedInSubscriptionNotifications",
					"displayLabel",
					"displayName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetSSOUserByIdAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/APISSOUser"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"GetSSOUserByEmailAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/APISSOUser"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"DeleteSSOUserAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/APISSOUser"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"PatchSSOUserAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/APISSOUser"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"UpdateAPISSOUserData": {
				"properties": {
					"groupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"hasBlockedUsers": {
						"type": "boolean"
					},
					"isProfileDMDisabled": {
						"type": "boolean"
					},
					"isProfileCommentsPrivate": {
						"type": "boolean"
					},
					"isProfileActivityPrivate": {
						"type": "boolean"
					},
					"isCommentModeratorAdmin": {
						"type": "boolean"
					},
					"isAdminAdmin": {
						"type": "boolean"
					},
					"isAccountOwner": {
						"type": "boolean"
					},
					"displayName": {
						"type": "string"
					},
					"displayLabel": {
						"type": "string"
					},
					"optedInSubscriptionNotifications": {
						"type": "boolean"
					},
					"optedInNotifications": {
						"type": "boolean"
					},
					"avatarSrc": {
						"type": "string"
					},
					"loginCount": {
						"type": "integer",
						"format": "int32"
					},
					"createdFromUrlId": {
						"type": "string"
					},
					"signUpDate": {
						"type": "integer",
						"format": "int64"
					},
					"email": {
						"type": "string"
					},
					"websiteUrl": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"PutSSOUserAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"user": {
						"allOf": [
							{
								"$ref": "#/components/schemas/APISSOUser"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"AddSSOUserAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/APISSOUser"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"CreateAPISSOUserData": {
				"properties": {
					"groupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"hasBlockedUsers": {
						"type": "boolean"
					},
					"isProfileDMDisabled": {
						"type": "boolean"
					},
					"isProfileCommentsPrivate": {
						"type": "boolean"
					},
					"isProfileActivityPrivate": {
						"type": "boolean"
					},
					"isCommentModeratorAdmin": {
						"type": "boolean"
					},
					"isAdminAdmin": {
						"type": "boolean"
					},
					"isAccountOwner": {
						"type": "boolean"
					},
					"displayName": {
						"type": "string"
					},
					"displayLabel": {
						"type": "string"
					},
					"optedInSubscriptionNotifications": {
						"type": "boolean"
					},
					"optedInNotifications": {
						"type": "boolean"
					},
					"avatarSrc": {
						"type": "string"
					},
					"loginCount": {
						"type": "integer",
						"format": "int32"
					},
					"createdFromUrlId": {
						"type": "string"
					},
					"signUpDate": {
						"type": "integer",
						"format": "int64"
					},
					"email": {
						"type": "string"
					},
					"websiteUrl": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"username",
					"id"
				],
				"type": "object"
			},
			"APIPage": {
				"properties": {
					"isClosed": {
						"type": "boolean"
					},
					"accessibleByGroupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"rootCommentCount": {
						"type": "integer",
						"format": "int64"
					},
					"commentCount": {
						"type": "integer",
						"format": "int64"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"rootCommentCount",
					"commentCount",
					"createdAt",
					"title",
					"urlId",
					"id"
				],
				"type": "object"
			},
			"GetPagesAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"pages": {
						"items": {
							"$ref": "#/components/schemas/APIPage"
						},
						"type": "array"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"GetPageByURLIdAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"page": {
						"$ref": "#/components/schemas/APIPage"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"AddPageAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"page": {
						"$ref": "#/components/schemas/APIPage"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"CreateAPIPageData": {
				"properties": {
					"accessibleByGroupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"rootCommentCount": {
						"type": "integer",
						"format": "int64"
					},
					"commentCount": {
						"type": "integer",
						"format": "int64"
					},
					"title": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					}
				},
				"required": [
					"title",
					"url",
					"urlId"
				],
				"type": "object"
			},
			"PatchPageAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"page": {
						"$ref": "#/components/schemas/APIPage"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"UpdateAPIPageData": {
				"properties": {
					"isClosed": {
						"type": "boolean"
					},
					"accessibleByGroupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"title": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"DeletePageAPIResponse": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object"
			},
			"UserBadge": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"badgeId": {
						"type": "string"
					},
					"fromTenantId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"type": {
						"type": "integer",
						"format": "int32"
					},
					"threshold": {
						"type": "integer",
						"format": "int64"
					},
					"description": {
						"type": "string"
					},
					"displayLabel": {
						"type": "string"
					},
					"displaySrc": {
						"type": "string",
						"nullable": true
					},
					"backgroundColor": {
						"type": "string",
						"nullable": true
					},
					"borderColor": {
						"type": "string",
						"nullable": true
					},
					"textColor": {
						"type": "string",
						"nullable": true
					},
					"cssClass": {
						"type": "string",
						"nullable": true
					},
					"veteranUserThresholdMillis": {
						"type": "integer",
						"format": "int64"
					},
					"displayedOnComments": {
						"type": "boolean"
					},
					"receivedAt": {
						"type": "string",
						"format": "date-time"
					},
					"order": {
						"type": "integer",
						"format": "int32"
					}
				},
				"required": [
					"_id",
					"userId",
					"badgeId",
					"fromTenantId",
					"createdAt",
					"type",
					"threshold",
					"description",
					"displayLabel",
					"veteranUserThresholdMillis",
					"displayedOnComments",
					"receivedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"APIGetUserBadgeResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"userBadge": {
						"$ref": "#/components/schemas/UserBadge"
					}
				},
				"required": [
					"status",
					"userBadge"
				],
				"type": "object",
				"additionalProperties": false
			},
			"APIGetUserBadgesResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"userBadges": {
						"items": {
							"$ref": "#/components/schemas/UserBadge"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"userBadges"
				],
				"type": "object",
				"additionalProperties": false
			},
			"APICreateUserBadgeResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"userBadge": {
						"$ref": "#/components/schemas/UserBadge"
					}
				},
				"required": [
					"status",
					"userBadge"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserBadgeParams": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"badgeId": {
						"type": "string"
					},
					"displayedOnComments": {
						"type": "boolean"
					}
				},
				"required": [
					"userId",
					"badgeId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"APIEmptySuccessResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateUserBadgeParams": {
				"properties": {
					"displayedOnComments": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.number_": {
				"properties": {},
				"additionalProperties": {
					"type": "number",
					"format": "double"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"UserBadgeProgress": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"tenantId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"firstCommentId": {
						"type": "string"
					},
					"firstCommentDate": {
						"type": "string",
						"format": "date-time"
					},
					"autoTrustFactor": {
						"type": "number",
						"format": "double"
					},
					"manualTrustFactor": {
						"type": "number",
						"format": "double"
					},
					"progress": {
						"$ref": "#/components/schemas/Record_string.number_"
					}
				},
				"required": [
					"_id",
					"tenantId",
					"userId",
					"firstCommentId",
					"firstCommentDate",
					"progress"
				],
				"type": "object",
				"additionalProperties": false
			},
			"APIGetUserBadgeProgressResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"userBadgeProgress": {
						"$ref": "#/components/schemas/UserBadgeProgress"
					}
				},
				"required": [
					"status",
					"userBadgeProgress"
				],
				"type": "object",
				"additionalProperties": false
			},
			"APIGetUserBadgeProgressListResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"userBadgeProgresses": {
						"items": {
							"$ref": "#/components/schemas/UserBadgeProgress"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"userBadgeProgresses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_number.number_": {
				"properties": {},
				"additionalProperties": {
					"type": "number",
					"format": "double"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"QuestionDatum": {
				"properties": {
					"v": {
						"$ref": "#/components/schemas/Record_number.number_"
					},
					"total": {
						"type": "integer",
						"format": "int64"
					}
				},
				"required": [
					"v",
					"total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.QuestionDatum_": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/QuestionDatum"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"QuestionResultAggregationOverall": {
				"properties": {
					"dataByDateBucket": {
						"$ref": "#/components/schemas/Record_string.QuestionDatum_"
					},
					"dataByUrlId": {
						"$ref": "#/components/schemas/Record_string.QuestionDatum_"
					},
					"countsByValue": {
						"$ref": "#/components/schemas/Int32Map"
					},
					"total": {
						"type": "integer",
						"format": "int64"
					},
					"average": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"total",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AggregateQuestionResultsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"data": {
						"$ref": "#/components/schemas/QuestionResultAggregationOverall"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AggregateTimeBucket": {
				"type": "string",
				"enum": [
					"day",
					"month",
					"year"
				]
			},
			"Record_string.QuestionResultAggregationOverall_": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/QuestionResultAggregationOverall"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"BulkAggregateQuestionResultsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"data": {
						"$ref": "#/components/schemas/Record_string.QuestionResultAggregationOverall_"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BulkAggregateQuestionItem": {
				"properties": {
					"aggId": {
						"type": "string"
					},
					"questionId": {
						"type": "string"
					},
					"questionIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"urlId": {
						"type": "string"
					},
					"timeBucket": {
						"$ref": "#/components/schemas/AggregateTimeBucket"
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"aggId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BulkAggregateQuestionResultsRequest": {
				"properties": {
					"aggregations": {
						"items": {
							"$ref": "#/components/schemas/BulkAggregateQuestionItem"
						},
						"type": "array"
					}
				},
				"required": [
					"aggregations"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserId": {
				"type": "string"
			},
			"FDomain": {
				"type": "string"
			},
			"CommentLog": {
				"items": {},
				"type": "array"
			},
			"FComment": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"tenantId": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"urlIdRaw": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"pageTitle": {
						"type": "string",
						"nullable": true
					},
					"userId": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UserId"
							}
						],
						"nullable": true
					},
					"anonUserId": {
						"type": "string",
						"nullable": true
					},
					"commenterEmail": {
						"type": "string",
						"nullable": true
					},
					"commenterName": {
						"type": "string"
					},
					"commenterLink": {
						"type": "string",
						"nullable": true
					},
					"comment": {
						"type": "string"
					},
					"commentHTML": {
						"type": "string"
					},
					"parentId": {
						"type": "string",
						"nullable": true
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"localDateString": {
						"type": "string",
						"nullable": true
					},
					"localDateHours": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"votes": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"votesUp": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"votesDown": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"expireAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"verified": {
						"type": "boolean"
					},
					"verifiedDate": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"verificationId": {
						"type": "string",
						"nullable": true
					},
					"notificationSentForParent": {
						"type": "boolean"
					},
					"notificationSentForParentTenant": {
						"type": "boolean"
					},
					"reviewed": {
						"type": "boolean"
					},
					"imported": {
						"type": "boolean"
					},
					"externalId": {
						"type": "string"
					},
					"externalParentId": {
						"type": "string",
						"nullable": true
					},
					"avatarSrc": {
						"type": "string",
						"nullable": true
					},
					"isSpam": {
						"type": "boolean"
					},
					"permNotSpam": {
						"type": "boolean"
					},
					"aiDeterminedSpam": {
						"type": "boolean"
					},
					"hasImages": {
						"type": "boolean"
					},
					"pageNumber": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"pageNumberOF": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"pageNumberNF": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"hasLinks": {
						"type": "boolean"
					},
					"hasCode": {
						"type": "boolean"
					},
					"approved": {
						"type": "boolean"
					},
					"locale": {
						"type": "string",
						"nullable": true
					},
					"isDeleted": {
						"type": "boolean"
					},
					"isDeletedUser": {
						"type": "boolean"
					},
					"isBannedUser": {
						"type": "boolean"
					},
					"isByAdmin": {
						"type": "boolean"
					},
					"isByModerator": {
						"type": "boolean"
					},
					"isPinned": {
						"type": "boolean",
						"nullable": true
					},
					"isLocked": {
						"type": "boolean",
						"nullable": true
					},
					"flagCount": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"rating": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"displayLabel": {
						"type": "string",
						"nullable": true
					},
					"fromProductId": {
						"type": "integer",
						"format": "int32"
					},
					"meta": {
						"properties": {
							"wpUserId": {
								"type": "string"
							},
							"wpPostId": {
								"type": "string"
							}
						},
						"additionalProperties": {},
						"type": "object",
						"nullable": true
					},
					"ipHash": {
						"type": "string"
					},
					"mentions": {
						"items": {
							"$ref": "#/components/schemas/CommentUserMentionInfo"
						},
						"type": "array"
					},
					"hashTags": {
						"items": {
							"$ref": "#/components/schemas/CommentUserHashTagInfo"
						},
						"type": "array"
					},
					"badges": {
						"items": {
							"$ref": "#/components/schemas/CommentUserBadgeInfo"
						},
						"type": "array",
						"nullable": true
					},
					"domain": {
						"allOf": [
							{
								"$ref": "#/components/schemas/FDomain"
							}
						],
						"nullable": true
					},
					"veteranBadgeProcessed": {
						"type": "string"
					},
					"moderationGroupIds": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"didProcessBadges": {
						"type": "boolean"
					},
					"fromOfflineRestore": {
						"type": "boolean"
					},
					"autoplayJobId": {
						"type": "string"
					},
					"autoplayDelayMS": {
						"type": "integer",
						"format": "int64"
					},
					"feedbackIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"logs": {
						"items": {
							"$ref": "#/components/schemas/CommentLog"
						},
						"type": "array",
						"nullable": true
					},
					"groupIds": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"viewCount": {
						"type": "integer",
						"format": "int64",
						"nullable": true
					},
					"requiresVerification": {
						"type": "boolean"
					},
					"editKey": {
						"type": "string"
					}
				},
				"required": [
					"_id",
					"tenantId",
					"urlId",
					"url",
					"commenterName",
					"comment",
					"commentHTML",
					"date",
					"verified",
					"approved",
					"locale"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MetaItem": {
				"properties": {
					"name": {
						"type": "string"
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"values"
				],
				"type": "object",
				"additionalProperties": false
			},
			"QuestionResult": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"tenantId": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"anonUserId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"value": {
						"type": "integer",
						"format": "int32"
					},
					"commentId": {
						"type": "string",
						"nullable": true
					},
					"questionId": {
						"type": "string"
					},
					"meta": {
						"items": {
							"$ref": "#/components/schemas/MetaItem"
						},
						"type": "array",
						"nullable": true
					},
					"ipHash": {
						"type": "string"
					}
				},
				"required": [
					"_id",
					"tenantId",
					"urlId",
					"anonUserId",
					"userId",
					"createdAt",
					"value",
					"questionId",
					"ipHash"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FindCommentsByRangeItem": {
				"properties": {
					"comment": {
						"allOf": [
							{
								"$ref": "#/components/schemas/FComment"
							}
						],
						"nullable": true
					},
					"result": {
						"$ref": "#/components/schemas/QuestionResult"
					}
				},
				"required": [
					"comment",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FindCommentsByRangeResponse": {
				"properties": {
					"results": {
						"items": {
							"$ref": "#/components/schemas/FindCommentsByRangeItem"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"results",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CombineQuestionResultsWithCommentsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"data": {
						"$ref": "#/components/schemas/FindCommentsByRangeResponse"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetFeedPostsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"feedPosts": {
						"items": {
							"$ref": "#/components/schemas/FeedPost"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"feedPosts"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateFeedPostsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"feedPost": {
						"$ref": "#/components/schemas/FeedPost"
					}
				},
				"required": [
					"status",
					"feedPost"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddDomainConfigParams": {
				"properties": {
					"domain": {
						"type": "string"
					},
					"emailFromName": {
						"type": "string"
					},
					"emailFromEmail": {
						"type": "string"
					},
					"logoSrc": {
						"type": "string"
					},
					"logoSrc100px": {
						"type": "string"
					},
					"footerUnsubscribeURL": {
						"type": "string"
					},
					"emailHeaders": {
						"$ref": "#/components/schemas/Record_string.string_"
					}
				},
				"required": [
					"domain"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateDomainConfigParams": {
				"properties": {
					"domain": {
						"type": "string"
					},
					"emailFromName": {
						"type": "string"
					},
					"emailFromEmail": {
						"type": "string"
					},
					"logoSrc": {
						"type": "string"
					},
					"logoSrc100px": {
						"type": "string"
					},
					"footerUnsubscribeURL": {
						"type": "string"
					},
					"emailHeaders": {
						"$ref": "#/components/schemas/Record_string.string_"
					}
				},
				"required": [
					"domain"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PatchDomainConfigParams": {
				"properties": {
					"domain": {
						"type": "string"
					},
					"emailFromName": {
						"type": "string"
					},
					"emailFromEmail": {
						"type": "string"
					},
					"logoSrc": {
						"type": "string"
					},
					"logoSrc100px": {
						"type": "string"
					},
					"footerUnsubscribeURL": {
						"type": "string"
					},
					"emailHeaders": {
						"$ref": "#/components/schemas/Record_string.string_"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_FComment.APICommentFieldsKeys_": {
				"properties": {
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"_id": {
						"type": "string"
					},
					"tenantId": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"urlIdRaw": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"pageTitle": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"anonUserId": {
						"type": "string"
					},
					"commenterEmail": {
						"type": "string"
					},
					"commenterName": {
						"type": "string"
					},
					"commenterLink": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"commentHTML": {
						"type": "string"
					},
					"parentId": {
						"type": "string"
					},
					"localDateString": {
						"type": "string"
					},
					"localDateHours": {
						"type": "integer",
						"format": "int32"
					},
					"votes": {
						"type": "integer",
						"format": "int32"
					},
					"votesUp": {
						"type": "integer",
						"format": "int32"
					},
					"votesDown": {
						"type": "integer",
						"format": "int32"
					},
					"expireAt": {
						"type": "string",
						"format": "date-time"
					},
					"verified": {
						"type": "boolean"
					},
					"verifiedDate": {
						"type": "string",
						"format": "date-time"
					},
					"notificationSentForParent": {
						"type": "boolean"
					},
					"notificationSentForParentTenant": {
						"type": "boolean"
					},
					"reviewed": {
						"type": "boolean"
					},
					"externalId": {
						"type": "string"
					},
					"externalParentId": {
						"type": "string"
					},
					"avatarSrc": {
						"type": "string"
					},
					"isSpam": {
						"type": "boolean"
					},
					"aiDeterminedSpam": {
						"type": "boolean"
					},
					"hasImages": {
						"type": "boolean"
					},
					"hasLinks": {
						"type": "boolean"
					},
					"hasCode": {
						"type": "boolean"
					},
					"approved": {
						"type": "boolean"
					},
					"locale": {
						"type": "string"
					},
					"isDeleted": {
						"type": "boolean"
					},
					"isDeletedUser": {
						"type": "boolean"
					},
					"isByAdmin": {
						"type": "boolean"
					},
					"isByModerator": {
						"type": "boolean"
					},
					"isPinned": {
						"type": "boolean"
					},
					"isLocked": {
						"type": "boolean"
					},
					"flagCount": {
						"type": "integer",
						"format": "int32"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"displayLabel": {
						"type": "string"
					},
					"fromProductId": {
						"type": "integer",
						"format": "int32"
					},
					"meta": {
						"properties": {
							"wpUserId": {
								"type": "string"
							},
							"wpPostId": {
								"type": "string"
							}
						},
						"additionalProperties": {},
						"type": "object"
					},
					"mentions": {
						"items": {
							"$ref": "#/components/schemas/CommentUserMentionInfo"
						},
						"type": "array"
					},
					"hashTags": {
						"items": {
							"$ref": "#/components/schemas/CommentUserHashTagInfo"
						},
						"type": "array"
					},
					"badges": {
						"items": {
							"$ref": "#/components/schemas/CommentUserBadgeInfo"
						},
						"type": "array"
					},
					"domain": {
						"type": "string"
					},
					"moderationGroupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"feedbackIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"date",
					"_id",
					"tenantId",
					"urlId",
					"url",
					"commenterName",
					"comment",
					"commentHTML",
					"verified",
					"approved",
					"locale"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"APIComment": {
				"$ref": "#/components/schemas/Pick_FComment.APICommentFieldsKeys_"
			},
			"APIGetCommentResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"comment": {
						"$ref": "#/components/schemas/APIComment"
					}
				},
				"required": [
					"status",
					"comment"
				],
				"type": "object",
				"additionalProperties": false
			},
			"APIGetCommentsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/APIComment"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"comments"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_APIComment.UpdatableCommentFields_": {
				"properties": {
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"urlId": {
						"type": "string"
					},
					"urlIdRaw": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"pageTitle": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"commenterEmail": {
						"type": "string"
					},
					"commenterName": {
						"type": "string"
					},
					"commenterLink": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"commentHTML": {
						"type": "string"
					},
					"parentId": {
						"type": "string"
					},
					"localDateString": {
						"type": "string"
					},
					"localDateHours": {
						"type": "integer",
						"format": "int32"
					},
					"votes": {
						"type": "integer",
						"format": "int32"
					},
					"votesUp": {
						"type": "integer",
						"format": "int32"
					},
					"votesDown": {
						"type": "integer",
						"format": "int32"
					},
					"expireAt": {
						"type": "string",
						"format": "date-time"
					},
					"verified": {
						"type": "boolean"
					},
					"verifiedDate": {
						"type": "string",
						"format": "date-time"
					},
					"notificationSentForParent": {
						"type": "boolean"
					},
					"notificationSentForParentTenant": {
						"type": "boolean"
					},
					"reviewed": {
						"type": "boolean"
					},
					"externalId": {
						"type": "string"
					},
					"externalParentId": {
						"type": "string"
					},
					"avatarSrc": {
						"type": "string"
					},
					"isSpam": {
						"type": "boolean"
					},
					"approved": {
						"type": "boolean"
					},
					"isDeleted": {
						"type": "boolean"
					},
					"isDeletedUser": {
						"type": "boolean"
					},
					"isByAdmin": {
						"type": "boolean"
					},
					"isByModerator": {
						"type": "boolean"
					},
					"isPinned": {
						"type": "boolean"
					},
					"isLocked": {
						"type": "boolean"
					},
					"flagCount": {
						"type": "integer",
						"format": "int32"
					},
					"displayLabel": {
						"type": "string"
					},
					"meta": {
						"properties": {
							"wpUserId": {
								"type": "string"
							},
							"wpPostId": {
								"type": "string"
							}
						},
						"additionalProperties": {},
						"type": "object"
					},
					"moderationGroupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"feedbackIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"date",
					"urlId",
					"url",
					"commenterName",
					"comment",
					"commentHTML",
					"verified",
					"approved"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UpdatableCommentParams": {
				"$ref": "#/components/schemas/Pick_APIComment.UpdatableCommentFields_"
			},
			"DeleteCommentAction": {
				"type": "string",
				"enum": [
					"already-deleted",
					"hard-removed",
					"anonymized"
				]
			},
			"DeleteCommentResult": {
				"properties": {
					"action": {
						"$ref": "#/components/schemas/DeleteCommentAction"
					},
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					}
				},
				"required": [
					"action",
					"status"
				],
				"type": "object"
			},
			"SaveCommentResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ImportedAPIStatus.SUCCESS"
					},
					"comment": {
						"$ref": "#/components/schemas/FComment"
					},
					"user": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UserSessionInfo"
							}
						],
						"nullable": true
					},
					"moduleData": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"status",
					"comment",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateCommentParams": {
				"properties": {
					"date": {
						"type": "integer",
						"format": "int64"
					},
					"localDateString": {
						"type": "string"
					},
					"localDateHours": {
						"type": "integer",
						"format": "int32"
					},
					"commenterName": {
						"type": "string"
					},
					"commenterEmail": {
						"type": "string",
						"nullable": true
					},
					"commenterLink": {
						"type": "string",
						"nullable": true
					},
					"comment": {
						"type": "string"
					},
					"productId": {
						"type": "integer",
						"format": "int32"
					},
					"userId": {
						"type": "string",
						"nullable": true
					},
					"avatarSrc": {
						"type": "string",
						"nullable": true
					},
					"parentId": {
						"type": "string",
						"nullable": true
					},
					"mentions": {
						"items": {
							"$ref": "#/components/schemas/CommentUserMentionInfo"
						},
						"type": "array"
					},
					"hashTags": {
						"items": {
							"$ref": "#/components/schemas/CommentUserHashTagInfo"
						},
						"type": "array"
					},
					"pageTitle": {
						"type": "string"
					},
					"isFromMyAccountPage": {
						"type": "boolean"
					},
					"url": {
						"type": "string"
					},
					"urlId": {
						"type": "string"
					},
					"meta": {
						"additionalProperties": false,
						"type": "object"
					},
					"moderationGroupIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"fromOfflineRestore": {
						"type": "boolean"
					},
					"autoplayDelayMS": {
						"type": "integer",
						"format": "int64"
					},
					"feedbackIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"questionValues": {
						"$ref": "#/components/schemas/Record_string.string-or-number_"
					},
					"approved": {
						"type": "boolean"
					},
					"domain": {
						"type": "string"
					},
					"ip": {
						"type": "string"
					},
					"isPinned": {
						"type": "boolean"
					},
					"locale": {
						"type": "string",
						"description": "Example: en_us"
					},
					"reviewed": {
						"type": "boolean"
					},
					"verified": {
						"type": "boolean"
					},
					"votes": {
						"type": "integer",
						"format": "int32"
					},
					"votesDown": {
						"type": "integer",
						"format": "int32"
					},
					"votesUp": {
						"type": "integer",
						"format": "int32"
					}
				},
				"required": [
					"commenterName",
					"comment",
					"url",
					"urlId",
					"locale"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FlagCommentResponse": {
				"properties": {
					"statusCode": {
						"type": "integer",
						"format": "int32"
					},
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"code": {
						"type": "string"
					},
					"reason": {
						"type": "string"
					},
					"wasUnapproved": {
						"type": "boolean"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BlockFromCommentParams": {
				"properties": {
					"commentIdsToCheck": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"UnBlockFromCommentParams": {
				"properties": {
					"commentIdsToCheck": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_TenantAuditLog.TenantAuditLogKeys_": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"resourceName": {
						"type": "string"
					},
					"crudType": {
						"type": "string",
						"enum": [
							"c",
							"r",
							"u",
							"d",
							"login"
						]
					},
					"from": {
						"type": "string",
						"enum": [
							"ui",
							"api",
							"cron"
						]
					},
					"ip": {
						"type": "string"
					},
					"when": {
						"type": "string",
						"format": "date-time"
					},
					"description": {
						"type": "string"
					},
					"serverStartDate": {
						"type": "string",
						"format": "date-time"
					},
					"objectDetails": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"_id",
					"resourceName",
					"crudType"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"APIAuditLog": {
				"$ref": "#/components/schemas/Pick_TenantAuditLog.TenantAuditLogKeys_"
			},
			"GetAuditLogsResponse": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"auditLogs": {
						"items": {
							"$ref": "#/components/schemas/APIAuditLog"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"auditLogs"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SORT_DIR": {
				"type": "string",
				"enum": [
					"ASC",
					"DESC"
				]
			},
			"DistinctAccumulator": {
				"$ref": "#/components/schemas/Record_string.number_"
			},
			"GroupValues": {
				"$ref": "#/components/schemas/Record_string.string_"
			},
			"AggregationValue": {
				"properties": {
					"groups": {
						"$ref": "#/components/schemas/GroupValues"
					},
					"stringValue": {
						"type": "string"
					},
					"numericValue": {
						"type": "number",
						"format": "double"
					},
					"distinctCount": {
						"type": "integer",
						"format": "int64"
					},
					"distinctCounts": {
						"$ref": "#/components/schemas/DistinctAccumulator"
					}
				},
				"type": "object"
			},
			"Record_string.AggregationValue_": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/AggregationValue"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"AggregationItem": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Record_string.AggregationValue_"
					},
					{
						"properties": {
							"groups": {
								"$ref": "#/components/schemas/GroupValues"
							}
						},
						"type": "object"
					}
				]
			},
			"AggregationResponse": {
				"description": "The API response returns the aggregated data along with simple stats",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/APIStatus"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/AggregationItem"
						},
						"type": "array"
					},
					"stats": {
						"properties": {
							"timeMS": {
								"type": "integer",
								"format": "int64"
							},
							"scanned": {
								"type": "integer",
								"format": "int64"
							}
						},
						"required": [
							"timeMS",
							"scanned"
						],
						"type": "object"
					}
				},
				"required": [
					"status",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"QueryPredicate": {
				"properties": {
					"key": {
						"type": "string"
					},
					"value": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "boolean"
							}
						]
					},
					"operator": {
						"type": "string",
						"enum": [
							"eq",
							"not_eq",
							"greater_than",
							"less_than",
							"contains"
						]
					}
				},
				"required": [
					"key",
					"value",
					"operator"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AggregationOpType": {
				"type": "string",
				"enum": [
					"sum",
					"countDistinct",
					"distinct",
					"avg",
					"min",
					"max",
					"count"
				],
				"description": "The supported aggregation operation types"
			},
			"AggregationOperation": {
				"description": "An operation that will be applied on a field",
				"properties": {
					"field": {
						"type": "string",
						"description": "The field to operate on"
					},
					"op": {
						"$ref": "#/components/schemas/AggregationOpType",
						"description": "The type of operation"
					},
					"alias": {
						"type": "string",
						"description": "Optional alias for the output; if not provided, a default alias is computed"
					},
					"expandArray": {
						"type": "boolean"
					}
				},
				"required": [
					"field",
					"op"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AggregationRequest": {
				"description": "The aggregation request accepts a resource, optional grouping keys, an array of operations, and an optional sort",
				"properties": {
					"query": {
						"items": {
							"$ref": "#/components/schemas/QueryPredicate"
						},
						"type": "array"
					},
					"resourceName": {
						"type": "string"
					},
					"groupBy": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"operations": {
						"items": {
							"$ref": "#/components/schemas/AggregationOperation"
						},
						"type": "array"
					},
					"sort": {
						"properties": {
							"dir": {
								"type": "string",
								"enum": [
									"asc",
									"desc"
								]
							},
							"field": {
								"type": "string"
							}
						},
						"required": [
							"dir",
							"field"
						],
						"type": "object"
					}
				},
				"required": [
					"resourceName",
					"operations"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "x-api-key",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "fastcomments",
		"version": "0.0.0",
		"contact": {}
	},
	"paths": {
		"/user-search/{tenantId}": {
			"get": {
				"operationId": "SearchUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/SearchUsersResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "usernameStartsWith",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "mentionGroupIds",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user-presence-status": {
			"get": {
				"operationId": "GetUserPresenceStatuses",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GetUserPresenceStatusesResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/APIError"
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlIdWS",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userIds",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user-notifications": {
			"get": {
				"operationId": "GetUserNotifications",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GetMyNotificationsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "afterId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "includeContext",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "afterCreatedAt",
						"required": false,
						"schema": {
							"format": "int64",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "unreadOnly",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "dmOnly",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "noDm",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "includeTranslations",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user-notifications/reset": {
			"post": {
				"operationId": "ResetUserNotifications",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ResetUserNotificationsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "afterId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "afterCreatedAt",
						"required": false,
						"schema": {
							"format": "int64",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "unreadOnly",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "dmOnly",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "noDm",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user-notifications/get-count": {
			"get": {
				"operationId": "GetUserNotificationCount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GetUserNotificationCountResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user-notifications/reset-count": {
			"post": {
				"operationId": "ResetUserNotificationCount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ResetUserNotificationsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user-notifications/{notificationId}/mark/{newStatus}": {
			"post": {
				"operationId": "UpdateUserNotificationStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/UserNotificationWriteResponse"
										},
										{
											"$ref": "#/components/schemas/IgnoredResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "notificationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "newStatus",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"read",
								"unread"
							]
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user-notifications/{notificationId}/mark-opted/{optedInOrOut}": {
			"post": {
				"operationId": "UpdateUserNotificationCommentSubscriptionStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/UserNotificationWriteResponse"
										},
										{
											"$ref": "#/components/schemas/IgnoredResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"description": "Enable or disable notifications for a specific comment.",
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "notificationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "optedInOrOut",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"in",
								"out"
							]
						}
					},
					{
						"in": "query",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user-notifications/set-subscription-state/{subscribedOrUnsubscribed}": {
			"post": {
				"operationId": "UpdateUserNotificationPageSubscriptionStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/UserNotificationWriteResponse"
										},
										{
											"$ref": "#/components/schemas/IgnoredResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"description": "Enable or disable notifications for a page. When users are subscribed to a page, notifications are created\nfor new root comments, and also",
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "url",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pageTitle",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "subscribedOrUnsubscribed",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"subscribe",
								"unsubscribe"
							]
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/upload-image/{tenantId}": {
			"post": {
				"operationId": "UploadImage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UploadImageResponse"
								}
							}
						}
					}
				},
				"description": "Upload and resize an image",
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Size preset: \"Default\" (1000x1000px) or \"CrossPlatform\" (creates sizes for popular devices)",
						"in": "query",
						"name": "sizePreset",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/SizePreset"
						}
					},
					{
						"description": "Page id that upload is happening from, to configure",
						"in": "query",
						"name": "urlId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"file": {
										"type": "string",
										"format": "binary"
									}
								},
								"required": [
									"file"
								]
							}
						}
					}
				}
			}
		},
		"/flag-comment/{commentId}": {
			"post": {
				"operationId": "FlagCommentPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIEmptyResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isFlagged",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/feed-posts/{tenantId}": {
			"get": {
				"operationId": "GetFeedPostsPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PublicFeedPostsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"description": "\nreq\ntenantId\nafterId",
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "afterId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "tags",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isCrawler",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "includeUserInfo",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateFeedPostPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/CreateFeedPostResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateFeedPostParams"
							}
						}
					}
				}
			}
		},
		"/feed-posts/{tenantId}/react/{postId}": {
			"post": {
				"operationId": "ReactFeedPostPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ReactFeedPostResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isUndo",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReactBodyParams"
							}
						}
					}
				}
			}
		},
		"/feed-posts/{tenantId}/user-reacts": {
			"get": {
				"operationId": "GetUserReactsPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/UserReactsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "postIds",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/feed-posts/{tenantId}/{postId}": {
			"put": {
				"operationId": "UpdateFeedPostPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/CreateFeedPostResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateFeedPostParams"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteFeedPostPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"status": {
													"$ref": "#/components/schemas/APIStatus"
												}
											},
											"required": [
												"status"
											],
											"type": "object"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/feed-posts/{tenantId}/stats": {
			"get": {
				"operationId": "GetFeedPostsStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FeedPostsStatsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "postIds",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/event-log/{tenantId}": {
			"get": {
				"operationId": "GetEventLog",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GetEventLogResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"description": "\nreq\ntenantId\nurlId\nuserIdWS",
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userIdWS",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "startTime",
						"required": true,
						"schema": {
							"format": "int64",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "endTime",
						"required": true,
						"schema": {
							"format": "int64",
							"type": "integer"
						}
					}
				]
			}
		},
		"/event-log/global/{tenantId}": {
			"get": {
				"operationId": "GetGlobalEventLog",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GetEventLogResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"description": "\nreq\ntenantId\nurlId\nuserIdWS",
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userIdWS",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "startTime",
						"required": true,
						"schema": {
							"format": "int64",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "endTime",
						"required": true,
						"schema": {
							"format": "int64",
							"type": "integer"
						}
					}
				]
			}
		},
		"/comments/{tenantId}/{commentId}/text": {
			"get": {
				"operationId": "GetCommentText",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PublicAPIGetCommentTextResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "editKey",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/comments/{tenantId}/{commentId}/update-text": {
			"post": {
				"operationId": "SetCommentText",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PublicAPISetCommentTextResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "editKey",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CommentTextUpdateRequest"
							}
						}
					}
				}
			}
		},
		"/comments/{tenantId}": {
			"get": {
				"operationId": "GetCommentsPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GetCommentsResponseWithPresence_PublicComment_"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"description": "\nreq\ntenantId\nurlId",
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "direction",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/SortDirections"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "skipChildren",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "limitChildren",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "countChildren",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "fetchPageForCommentId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "includeConfig",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "countAll",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "includei10n",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "locale",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "modules",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isCrawler",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "includeNotificationCount",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "asTree",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "maxTreeDepth",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "useFullTranslationIds",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "searchText",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "hashTags",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "customConfigStr",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "afterCommentId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "beforeCommentId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateCommentPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/SaveCommentsResponseWithPresence"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sessionId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CommentData"
							}
						}
					}
				}
			}
		},
		"/comments/{tenantId}/{commentId}": {
			"delete": {
				"operationId": "DeleteCommentPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PublicAPIDeleteCommentResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "editKey",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/check-blocked-comments": {
			"get": {
				"operationId": "CheckedCommentsForBlocked",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/CheckBlockedCommentsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "A comma separated list of comment ids.",
						"in": "query",
						"name": "commentIds",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/comments/{tenantId}/{commentId}/vote": {
			"post": {
				"operationId": "VoteComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/VoteResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sessionId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VoteBodyParams"
							}
						}
					}
				}
			}
		},
		"/comments/{tenantId}/{commentId}/vote/{voteId}": {
			"delete": {
				"operationId": "DeleteCommentVote",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/VoteDeleteResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "voteId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "editKey",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/comments/{tenantId}/{commentId}/votes": {
			"get": {
				"operationId": "GetCommentVoteUserNames",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GetCommentVoteUserNamesSuccessResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "dir",
						"required": true,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/comments/{tenantId}/{commentId}/pin": {
			"post": {
				"operationId": "PinComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChangeCommentPinStatusResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/comments/{tenantId}/{commentId}/unpin": {
			"post": {
				"operationId": "UnPinComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ChangeCommentPinStatusResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/comments/{tenantId}/{commentId}/lock": {
			"post": {
				"operationId": "LockComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIError"
										},
										{
											"$ref": "#/components/schemas/APIEmptyResponse"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/comments/{tenantId}/{commentId}/unlock": {
			"post": {
				"operationId": "UnLockComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIError"
										},
										{
											"$ref": "#/components/schemas/APIEmptyResponse"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/block-from-comment/{commentId}": {
			"post": {
				"operationId": "BlockFromCommentPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/BlockSuccess"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PublicBlockFromCommentParams"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "UnBlockCommentPublic",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/UnblockSuccess"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Public"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sso",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PublicBlockFromCommentParams"
							}
						}
					}
				}
			}
		},
		"/api/v1/subscriptions": {
			"get": {
				"operationId": "GetSubscriptions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetSubscriptionsAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateSubscription",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateSubscriptionAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAPIUserSubscriptionData"
							}
						}
					}
				}
			}
		},
		"/api/v1/subscriptions/{id}": {
			"delete": {
				"operationId": "DeleteSubscription",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteSubscriptionAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/sso-users": {
			"get": {
				"operationId": "GetSSOUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"users": {
											"items": {
												"$ref": "#/components/schemas/APISSOUser"
											},
											"type": "array"
										},
										"status": {
											"type": "string"
										}
									},
									"required": [
										"users",
										"status"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					}
				]
			},
			"post": {
				"operationId": "AddSSOUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddSSOUserAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAPISSOUserData"
							}
						}
					}
				}
			}
		},
		"/api/v1/sso-users/by-id/{id}": {
			"get": {
				"operationId": "GetSSOUserById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetSSOUserByIdAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/sso-users/by-email/{email}": {
			"get": {
				"operationId": "GetSSOUserByEmail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetSSOUserByEmailAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "email",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/sso-users/{id}": {
			"delete": {
				"operationId": "DeleteSSOUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteSSOUserAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "deleteComments",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "commentDeleteMode",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "PatchSSOUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PatchSSOUserAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "updateComments",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateAPISSOUserData"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "PutSSOUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PutSSOUserAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "updateComments",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateAPISSOUserData"
							}
						}
					}
				}
			}
		},
		"/api/v1/pages": {
			"get": {
				"operationId": "GetPages",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetPagesAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "AddPage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddPageAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAPIPageData"
							}
						}
					}
				}
			}
		},
		"/api/v1/pages/by-url-id": {
			"get": {
				"operationId": "GetPageByURLId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetPageByURLIdAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/pages/{id}": {
			"patch": {
				"operationId": "PatchPage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PatchPageAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateAPIPageData"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeletePage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeletePageAPIResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/user-badges/{id}": {
			"get": {
				"operationId": "GetUserBadge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIGetUserBadgeResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUserBadge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIEmptySuccessResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserBadgeParams"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUserBadge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIEmptySuccessResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/user-badges": {
			"get": {
				"operationId": "GetUserBadges",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIGetUserBadgesResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "badgeId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "type",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "displayedOnComments",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUserBadge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APICreateUserBadgeResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserBadgeParams"
							}
						}
					}
				}
			}
		},
		"/api/v1/user-badge-progress/{id}": {
			"get": {
				"operationId": "GetUserBadgeProgressById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIGetUserBadgeProgressResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/user-badge-progress": {
			"get": {
				"operationId": "GetUserBadgeProgressList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIGetUserBadgeProgressListResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/v1/user-badge-progress/user/{userId}": {
			"get": {
				"operationId": "GetUserBadgeProgressByUserId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIGetUserBadgeProgressResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/question-results-aggregation": {
			"get": {
				"operationId": "AggregateQuestionResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/AggregateQuestionResultsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "questionId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "questionIds",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "timeBucket",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AggregateTimeBucket"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "forceRecalculate",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/api/v1/question-results-aggregation/bulk": {
			"post": {
				"operationId": "BulkAggregateQuestionResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/BulkAggregateQuestionResultsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "forceRecalculate",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BulkAggregateQuestionResultsRequest"
							}
						}
					}
				}
			}
		},
		"/api/v1/question-results-aggregation/combine/comments": {
			"get": {
				"operationId": "CombineCommentsWithQuestionResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/CombineQuestionResultsWithCommentsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "questionId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "questionIds",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "forceRecalculate",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "minValue",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "maxValue",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/v1/feed-posts": {
			"get": {
				"operationId": "GetFeedPosts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GetFeedPostsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"description": "\nreq\ntenantId\nafterId",
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "afterId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "tags",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				]
			},
			"post": {
				"operationId": "CreateFeedPost",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/CreateFeedPostsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "broadcastId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isLive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "doSpamCheck",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "skipDupCheck",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateFeedPostParams"
							}
						}
					}
				}
			}
		},
		"/api/v1/feed-posts/{id}": {
			"patch": {
				"operationId": "UpdateFeedPost",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIEmptyResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FeedPost"
							}
						}
					}
				}
			}
		},
		"/api/v1/domain-configs": {
			"get": {
				"operationId": "GetDomainConfigs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"configurations": {},
												"status": {}
											},
											"required": [
												"configurations",
												"status"
											],
											"type": "object"
										},
										{
											"properties": {
												"reason": {
													"type": "string"
												},
												"code": {
													"type": "string"
												},
												"status": {}
											},
											"required": [
												"reason",
												"code",
												"status"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "AddDomainConfig",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"reason": {
													"type": "string"
												},
												"code": {
													"type": "string"
												},
												"status": {}
											},
											"required": [
												"reason",
												"code",
												"status"
											],
											"type": "object"
										},
										{
											"properties": {
												"configuration": {},
												"status": {}
											},
											"required": [
												"configuration",
												"status"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddDomainConfigParams"
							}
						}
					}
				}
			}
		},
		"/api/v1/domain-configs/{domain}": {
			"get": {
				"operationId": "GetDomainConfig",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"configuration": {},
												"status": {}
											},
											"required": [
												"configuration",
												"status"
											],
											"type": "object"
										},
										{
											"properties": {
												"reason": {
													"type": "string"
												},
												"code": {
													"type": "string"
												},
												"status": {}
											},
											"required": [
												"reason",
												"code",
												"status"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "domain",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteDomainConfig",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"status": {}
									},
									"required": [
										"status"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "domain",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/domain-configs/{domainToUpdate}": {
			"put": {
				"operationId": "PutDomainConfig",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"configuration": {},
												"status": {}
											},
											"required": [
												"configuration",
												"status"
											],
											"type": "object"
										},
										{
											"properties": {
												"reason": {
													"type": "string"
												},
												"code": {
													"type": "string"
												},
												"status": {}
											},
											"required": [
												"reason",
												"code",
												"status"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "domainToUpdate",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateDomainConfigParams"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "PatchDomainConfig",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"configuration": {},
												"status": {}
											},
											"required": [
												"configuration",
												"status"
											],
											"type": "object"
										},
										{
											"properties": {
												"reason": {
													"type": "string"
												},
												"code": {
													"type": "string"
												},
												"status": {}
											},
											"required": [
												"reason",
												"code",
												"status"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "domainToUpdate",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchDomainConfigParams"
							}
						}
					}
				}
			}
		},
		"/api/v1/comments/{id}": {
			"get": {
				"operationId": "GetComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIGetCommentResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIEmptyResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contextUserId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "doSpamCheck",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "isLive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdatableCommentParams"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/DeleteCommentResult"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contextUserId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isLive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/api/v1/comments": {
			"get": {
				"operationId": "GetComments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/APIGetCommentsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "asTree",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "skipChildren",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "limitChildren",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "maxTreeDepth",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "urlId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "anonUserId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contextUserId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "hashTag",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "direction",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/SortDirections"
						}
					}
				]
			},
			"post": {
				"operationId": "SaveComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/SaveCommentResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isLive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "doSpamCheck",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "sendEmails",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "populateNotifications",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateCommentParams"
							}
						}
					}
				}
			}
		},
		"/api/v1/comments/bulk": {
			"post": {
				"operationId": "SaveCommentsBulk",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"anyOf": [
											{
												"$ref": "#/components/schemas/SaveCommentResponse"
											},
											{
												"$ref": "#/components/schemas/APIError"
											}
										]
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isLive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "doSpamCheck",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "sendEmails",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "populateNotifications",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/CreateCommentParams"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/api/v1/comments/{id}/flag": {
			"post": {
				"operationId": "FlagComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FlagCommentResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "anonUserId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/comments/{id}/un-flag": {
			"post": {
				"operationId": "UnFlagComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FlagCommentResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "anonUserId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/comments/{id}/block": {
			"post": {
				"operationId": "BlockUserFromComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/BlockSuccess"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "anonUserId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BlockFromCommentParams"
							}
						}
					}
				}
			}
		},
		"/api/v1/comments/{id}/un-block": {
			"post": {
				"operationId": "UnBlockUserFromComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/UnblockSuccess"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "anonUserId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UnBlockFromCommentParams"
							}
						}
					}
				}
			}
		},
		"/api/v1/audit-logs": {
			"get": {
				"operationId": "GetAuditLogs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/GetAuditLogsResponse"
										},
										{
											"$ref": "#/components/schemas/APIError"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/SORT_DIR"
						}
					},
					{
						"in": "query",
						"name": "after",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "before",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/v1/aggregate": {
			"post": {
				"operationId": "Aggregate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AggregationResponse"
								}
							}
						}
					}
				},
				"description": "Aggregates documents by grouping them (if groupBy is provided) and applying multiple operations.\nDifferent operations (e.g. sum, countDistinct, avg, etc.) are supported.",
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "tenantId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentTenantId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "includeStats",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AggregationRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "https://fastcomments.com/"
		},
		{
			"url": "https://eu.fastcomments.com/"
		}
	]
}